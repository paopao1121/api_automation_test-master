{"version":3,"sources":["webpack:///src/views/project/ProjectMember.vue","webpack:///./src/views/project/ProjectMember.vue?ae5b","webpack:///./src/views/project/ProjectMember.vue"],"names":["ProjectMember","data","memberData","total","page","listLoading","reportFrom","editFormVisible","editLoading","editFormRules","required","message","trigger","min","max","mailUser","mailPass","mailSmtp","editForm","methods","handleCurrentChange","val","this","getProjectMember","self","params","project_id","$route","headers","Content-Type","Authorization","JSON","parse","sessionStorage","getItem","Object","api","then","_data","msg","code","$message","error","center","getEmailConfig","console","log","DelEmail","Number","success","editSubmit","_this","$refs","validate","valid","$confirm","type","resetFields","mounted","project_ProjectMember","render","_vm","_h","$createElement","_c","_self","staticClass","staticStyle","color","_v","margin-bottom","font-size","display","_e","_s","cursor","on","click","$event","width","left","attrs","title","visible","close-on-click-modal","update:visible","ref","model","label-width","rules","label","prop","auto-complete","value","callback","$$v","$set","trim","expression","slot","nativeOn","loading","span","directives","name","rawName","highlight-current-row","min-width","sortable","float","layout","page-size","page-count","current-change","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/15.0506994f2e5c562c3730.js","sourcesContent":["<template>\n    <!--列表-->\n    <el-row class=\"member-manage\">\n        <p style=\"color:#999\">*注<strong>: </strong>自动化测试结果会发送给所有项目成员</p>\n        <div style=\"margin-bottom: 20px;font-size: 20px\">\n            <div>\n                <div style=\"display: inline\">测试报告发送账号： </div>\n                <div v-if=\"!reportFrom\" style=\"display: inline\">未添加账号</div>\n                <div v-if=\"reportFrom\" style=\"display: inline\">{{reportFrom}}</div>\n\n                &nbsp;&nbsp;\n                <i class=\"el-icon-edit\" style=\"cursor:pointer;display: inline\" @click=\"editFormVisible=true\"></i>\n                                &nbsp;&nbsp;\n                <i v-if=\"reportFrom\" class=\"el-icon-delete\" style=\"cursor:pointer;display: inline\" @click=\"DelEmail()\"></i>\n            </div>\n        </div>\n        <el-dialog title=\"编辑\" :visible.sync=\"editFormVisible\" :close-on-click-modal=\"false\" style=\"width: 60%; left: 20%\">\n\t\t    <el-form :model=\"editForm\" label-width=\"100px\"  :rules=\"editFormRules\" ref=\"editForm\">\n                <el-form-item label=\"发送人邮箱:\" prop=\"reportFrom\">\n                    <el-input v-model.trim=\"editForm.reportFrom\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"用户名:\" prop=\"mailUser\">\n                    <el-input v-model.trim=\"editForm.mailUser\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"口令:\" prop=\"mailPass\">\n                    <el-input v-model.trim=\"editForm.mailPass\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"邮箱服务器:\" prop=\"mailSmtp\">\n                    <el-input v-model.trim=\"editForm.mailSmtp\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"editFormVisible = false\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"editSubmit\" :loading=\"editLoading\">提交</el-button>\n            </div>\n\t\t</el-dialog>\n        <el-col :span=\"24\">\n            <el-table :data=\"memberData\" highlight-current-row v-loading=\"listLoading\" style=\"width: 100%;\">\n                <el-table-column prop=\"username\" label=\"姓名\" min-width=\"30%\" sortable>\n                </el-table-column>\n                <el-table-column prop=\"permissionType\" label=\"权限\" min-width=\"30%\" sortable>\n                </el-table-column>\n                <el-table-column prop=\"userPhone\" label=\"手机号\" min-width=\"20%\" sortable>\n                </el-table-column>\n                <el-table-column prop=\"userEmail\" label=\"邮箱地址\" min-width=\"20%\" sortable>\n                </el-table-column>\n            </el-table>\n            <!--工具条-->\n            <el-pagination layout=\"prev, pager, next\" @current-change=\"handleCurrentChange\" :page-size=\"20\" :page-count=\"total\" style=\"float:right;\">\n            </el-pagination>\n        </el-col>\n    </el-row>\n</template>\n\n<script>\n    import { getProjectMemberList, getEmailConfigDetail, delEmailConfig, addEmailConfig} from \"../../api/api\";\n    export default {\n        data() {\n            return {\n                memberData: [],\n                total: 0,\n                page: 1,\n                listLoading: false,\n                reportFrom: \"\",\n                editFormVisible: false,//编辑界面是否显示\n                editLoading: false,\n                editFormRules: {\n                    reportFrom: [\n                        { required: true, message: '请输入发送人', trigger: 'blur' },\n                        { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }\n                    ],\n                    mailUser: [\n                        { required: true, message: '请输入用户名', trigger: 'blur' },\n                        { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }\n                    ],\n                    mailPass: [\n                        { required: true, message: '请输入口令', trigger: 'blur' },\n                        { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }\n                    ],\n                    mailSmtp: [\n                        { required: false, message: '请输入邮件服务器', trigger: 'blur' },\n                        { min: 1, max: 100, message: '长度在 1 到 100 个字符', trigger: 'blur' }\n                    ]\n                },\n                //编辑界面数据\n                editForm: {\n                },\n            }\n        },\n        methods: {\n            handleCurrentChange(val) {\n                this.page = val;\n                this.getProjectMember()\n            },\n            // 获取成员列表\n            getProjectMember() {\n                this.listLoading = true;\n                let self = this;\n                let params = {\n                    project_id: this.$route.params.project_id,\n                    page: self.page\n                };\n                let headers = {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                };\n                getProjectMemberList(headers, params).then(_data => {\n                    let {msg, code, data} = _data;\n                    self.listLoading = false;\n                    if (code === '999999') {\n                        self.total = data.total;\n                        self.memberData = data.data\n                    }\n                    else {\n                        self.$message.error({\n                            message: msg,\n                            center: true,\n                        })\n                    }\n                })\n            },\n            getEmailConfig(){\n                let self = this;\n                let params = {\n                    project_id: this.$route.params.project_id,\n                };\n                let headers = {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                };\n                getEmailConfigDetail(headers, params).then(_data => {\n                    let {msg, code, data} = _data;\n                    self.listLoading = false;\n                    if (code === '999999') {\n                        console.log(data);\n                        if (data) {\n                            self.reportFrom = data.reportFrom;\n                            self.editForm = data\n                        } else {\n                            self.reportFrom = \"\";\n                            self.editForm = {}\n                        }\n                    }\n                    else {\n                        self.$message.error({\n                            message: msg,\n                            center: true,\n                        })\n                    }\n                });\n            },\n            DelEmail(){\n                let self = this;\n                let params = {\n                    project_id: Number(this.$route.params.project_id)\n                };\n                let headers = {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                };\n                delEmailConfig(headers, params).then(_data => {\n                    let {msg, code, data} = _data;\n                    self.listLoading = false;\n                    if (code === '999999') {\n                        self.$message.success({\n                            message: \"删除成功\",\n                            center: true,\n                        });\n                        self.getEmailConfig()\n                    }\n                    else {\n                        self.$message.error({\n                            message: msg,\n                            center: true,\n                        })\n                    }\n                })\n            },\n            editSubmit: function () {\n                let self = this;\n                this.$refs.editForm.validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.editLoading = true;\n                            //NProgress.start();\n                            let params = {\n                                project_id: Number(this.$route.params.project_id),\n                                reportFrom: this.editForm.reportFrom,\n                                mailUser: this.editForm.mailUser,\n                                mailPass: this.editForm.mailPass,\n                                mailSmtp: this.editForm.mailSmtp,\n                            };\n                            let headers = {\n                                \"Content-Type\": \"application/json\",\n                                Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                            };\n                            addEmailConfig(headers, params).then(_data => {\n                                let {msg, code, data} = _data;\n                                self.editLoading = false;\n                                if (code === '999999') {\n                                    self.$message({\n                                        message: '修改成功',\n                                        center: true,\n                                        type: 'success'\n                                    });\n                                    self.$refs['editForm'].resetFields();\n                                    self.editFormVisible = false;\n                                    self.getEmailConfig()\n                                } else if (code === '999997'){\n                                    self.$message.error({\n                                        message: msg,\n                                        center: true,\n                                    })\n                                } else {\n                                    self.$message.error({\n                                        message: msg,\n                                        center: true,\n                                    })\n                                }\n                            })\n                        });\n                    }\n                });\n            },\n        },\n        mounted() {\n            this.getProjectMember();\n            this.getEmailConfig();\n\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .member-manage {\n        margin: 35px;\n    }\n</style>\n\n\n// WEBPACK FOOTER //\n// src/views/project/ProjectMember.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('el-row',{staticClass:\"member-manage\"},[_c('p',{staticStyle:{\"color\":\"#999\"}},[_vm._v(\"*注\"),_c('strong',[_vm._v(\": \")]),_vm._v(\"自动化测试结果会发送给所有项目成员\")]),_vm._v(\" \"),_c('div',{staticStyle:{\"margin-bottom\":\"20px\",\"font-size\":\"20px\"}},[_c('div',[_c('div',{staticStyle:{\"display\":\"inline\"}},[_vm._v(\"测试报告发送账号： \")]),_vm._v(\" \"),(!_vm.reportFrom)?_c('div',{staticStyle:{\"display\":\"inline\"}},[_vm._v(\"未添加账号\")]):_vm._e(),_vm._v(\" \"),(_vm.reportFrom)?_c('div',{staticStyle:{\"display\":\"inline\"}},[_vm._v(_vm._s(_vm.reportFrom))]):_vm._e(),_vm._v(\"\\n\\n                  \\n                \"),_c('i',{staticClass:\"el-icon-edit\",staticStyle:{\"cursor\":\"pointer\",\"display\":\"inline\"},on:{\"click\":function($event){_vm.editFormVisible=true}}}),_vm._v(\"\\n                                  \\n                \"),(_vm.reportFrom)?_c('i',{staticClass:\"el-icon-delete\",staticStyle:{\"cursor\":\"pointer\",\"display\":\"inline\"},on:{\"click\":function($event){return _vm.DelEmail()}}}):_vm._e()])]),_vm._v(\" \"),_c('el-dialog',{staticStyle:{\"width\":\"60%\",\"left\":\"20%\"},attrs:{\"title\":\"编辑\",\"visible\":_vm.editFormVisible,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.editFormVisible=$event}}},[_c('el-form',{ref:\"editForm\",attrs:{\"model\":_vm.editForm,\"label-width\":\"100px\",\"rules\":_vm.editFormRules}},[_c('el-form-item',{attrs:{\"label\":\"发送人邮箱:\",\"prop\":\"reportFrom\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.editForm.reportFrom),callback:function ($$v) {_vm.$set(_vm.editForm, \"reportFrom\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"editForm.reportFrom\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"用户名:\",\"prop\":\"mailUser\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.editForm.mailUser),callback:function ($$v) {_vm.$set(_vm.editForm, \"mailUser\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"editForm.mailUser\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"口令:\",\"prop\":\"mailPass\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.editForm.mailPass),callback:function ($$v) {_vm.$set(_vm.editForm, \"mailPass\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"editForm.mailPass\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"邮箱服务器:\",\"prop\":\"mailSmtp\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.editForm.mailSmtp),callback:function ($$v) {_vm.$set(_vm.editForm, \"mailSmtp\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"editForm.mailSmtp\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){_vm.editFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.editLoading},nativeOn:{\"click\":function($event){return _vm.editSubmit($event)}}},[_vm._v(\"提交\")])],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":24}},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.listLoading),expression:\"listLoading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.memberData,\"highlight-current-row\":\"\"}},[_c('el-table-column',{attrs:{\"prop\":\"username\",\"label\":\"姓名\",\"min-width\":\"30%\",\"sortable\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"permissionType\",\"label\":\"权限\",\"min-width\":\"30%\",\"sortable\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"userPhone\",\"label\":\"手机号\",\"min-width\":\"20%\",\"sortable\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"userEmail\",\"label\":\"邮箱地址\",\"min-width\":\"20%\",\"sortable\":\"\"}})],1),_vm._v(\" \"),_c('el-pagination',{staticStyle:{\"float\":\"right\"},attrs:{\"layout\":\"prev, pager, next\",\"page-size\":20,\"page-count\":_vm.total},on:{\"current-change\":_vm.handleCurrentChange}})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-e38878fa\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/project/ProjectMember.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e38878fa\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ProjectMember.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ProjectMember.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ProjectMember.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e38878fa\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ProjectMember.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-e38878fa\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/project/ProjectMember.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}