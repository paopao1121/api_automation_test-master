{"version":3,"sources":["webpack:///src/views/project/automation/CaseList.vue","webpack:///./src/views/project/automation/CaseList.vue?88df","webpack:///./src/views/project/automation/CaseList.vue"],"names":["CaseList","data","filters","name","Case","total","page","listLoading","sels","taskVShow","delLoading","disDel","TestStatus","form","type","frequency","unit","time","timeArray","Host","formRules","required","message","trigger","min","max","value","label","pickerOptions1","disabledDate","getTime","Date","now","pickerOptions2","shortcuts","text","onClick","picker","end","start","setTime","$emit","updateGroupFormVisible","updateGroupForm","firstGroup","updateGroupFormRules","group","updateGroupLoading","update","editFormVisible","editLoading","editFormRules","caseName","automationGroupLevelFirst","description","editForm","addFormVisible","addLoading","addFormRules","addForm","methods","DownloadApi","jquery_default","a","ajax","url","api","async","project_id","this","$route","params","headers","Authorization","JSON","parse","sessionStorage","getItem","timeout","success","code","window","open","TestReport","$router","push","getHost","self","forEach","item","status","$message","error","msg","center","getTask","startTime","endTime","e","addTask","_this","$refs","validate","valid","$confirm","then","console","log","param","Number","Host_id","moment_default","format","stringify_default","Content-Type","delTask","getCaseList","secondGroup","updateGroupSubmit","_this2","ids","map","id","automationGroupLevelFirst_id","catch","getCaseGroup","changeGroup","handleDel","index","row","_this3","handleCurrentChange","val","selsChange","length","batchRemove","_this4","handleEdit","assign_default","handleAdd","editSubmit","_this5","resetFields","addSubmit","_this6","mounted","automation_CaseList","render","_vm","_h","$createElement","_c","_self","staticStyle","height","attrs","span","inline","model","nativeOn","submit","$event","preventDefault","placeholder","keyup","indexOf","_k","keyCode","key","callback","$$v","$set","trim","expression","_v","on","click","disabled","width","left","title","visible","close-on-click-modal","update:visible","ref","label-width","rules","prop","_l","_n","_e","picker-options","range-separator","start-placeholder","end-placeholder","align","loading","auto-complete","rows","staticClass","slot","directives","rawName","highlight-current-row","selection-change","min-width","sortable","show-overflow-tooltip","scopedSlots","_u","fn","scope","text-decoration","to","case_id","_s","size","$index","float","layout","page-size","page-count","current-change","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"0MA4JAA,GACAC,KADA,WAEA,OACAC,SACAC,KAAA,IAEAC,QACAC,MAAA,EACAC,KAAA,EACAC,aAAA,EACAC,QACAC,WAAA,EACAC,YAAA,EACAC,QAAA,EACAC,YAAA,EACAC,MACAV,KAAA,GACAW,KAAA,cACAC,UAAA,GACAC,KAAA,IACAC,KAAA,GACAC,aACAC,KAAA,IAEAC,WACAjB,OACAkB,UAAA,EAAAC,QAAA,UAAAC,QAAA,SACAC,IAAA,EAAAC,IAAA,GAAAH,QAAA,iBAAAC,QAAA,SAEAR,YACAD,KAAA,SAAAO,UAAA,EAAAC,QAAA,YAEAJ,YACAJ,KAAA,QAAAO,UAAA,EAAAC,QAAA,YAEAL,OACAI,UAAA,EAAAC,QAAA,YAEAH,OACAE,UAAA,EAAAC,QAAA,YAEAR,OACAO,UAAA,EAAAC,QAAA,UAAAC,QAAA,UAGAJ,QACAH,OACAU,MAAA,IAAAC,MAAA,MACAD,MAAA,IAAAC,MAAA,MACAD,MAAA,IAAAC,MAAA,MACAD,MAAA,IAAAC,MAAA,MAEAb,OAAAY,MAAA,cAAAC,MAAA,OACAD,MAAA,SAAAC,MAAA,OACAC,gBACAC,aADA,SACAZ,GACA,OAAAA,EAAAa,UAAAC,KAAAC,MAAA,QAGAC,gBACAJ,aADA,SACAZ,GACA,OAAAA,EAAAa,UAAAC,KAAAC,MAAA,OAEAE,YACAC,KAAA,OACAC,QAFA,SAEAC,GACA,IAAAC,EAAA,IAAAP,KACAQ,EAAA,IAAAR,KACAO,EAAAE,QAAAF,EAAAR,UAAA,QACAO,EAAAI,MAAA,QAAAF,EAAAD,OAGAH,KAAA,QACAC,QAFA,SAEAC,GACA,IAAAC,EAAA,IAAAP,KACAQ,EAAA,IAAAR,KACAO,EAAAE,QAAAF,EAAAR,UAAA,QACAO,EAAAI,MAAA,QAAAF,EAAAD,OAGAH,KAAA,QACAC,QAFA,SAEAC,GACA,IAAAC,EAAA,IAAAP,KACAQ,EAAA,IAAAR,KACAO,EAAAE,QAAAF,EAAAR,UAAA,QACAO,EAAAI,MAAA,QAAAF,EAAAD,QAIAI,wBAAA,EACAC,iBACAC,WAAA,IAEAC,sBACAD,aAAA9B,KAAA,SAAAO,UAAA,EAAAC,QAAA,SAAAC,QAAA,UAEAuB,SACAC,oBAAA,EACAC,QAAA,EACAC,iBAAA,EACAC,aAAA,EACAC,eACAC,WACA/B,UAAA,EAAAC,QAAA,QAAAC,QAAA,SACAC,IAAA,EAAAC,IAAA,GAAAH,QAAA,iBAAAC,QAAA,SAEA8B,4BACAvC,KAAA,SAAAO,UAAA,EAAAC,QAAA,QAAAC,QAAA,SAEA+B,cACAjC,UAAA,EAAAC,QAAA,QAAAC,QAAA,SACAE,IAAA,KAAAH,QAAA,cAAAC,QAAA,UAIAgC,UACAH,SAAA,GACAC,0BAAA,GACAC,YAAA,IAGAE,gBAAA,EACAC,YAAA,EACAC,cACAN,WACA/B,UAAA,EAAAC,QAAA,QAAAC,QAAA,SACAC,IAAA,EAAAC,IAAA,GAAAH,QAAA,iBAAAC,QAAA,SAEAqB,aACA9B,KAAA,SAAAO,UAAA,EAAAC,QAAA,SAAAC,QAAA,SAEA+B,cACAjC,UAAA,EAAAC,QAAA,SAAAC,QAAA,SACAE,IAAA,KAAAH,QAAA,cAAAC,QAAA,UAIAoC,SACAP,SAAA,GACAR,WAAA,GACAU,YAAA,MAIAM,SAEAC,YAFA,WAGYC,EAAAC,EAAZC,MACAlD,KAAA,MACAmD,IAAAC,EAAA,iCACAC,OAAA,EACAlE,MAAAmE,WAAAC,KAAAC,OAAAC,OAAAH,YACAI,SACAC,cAAA,SAAAC,KAAAC,MAAAC,eAAAC,QAAA,WAEAC,QAAA,IACAC,QAAA,SAAA9E,GACA,WAAAA,EAAA+E,MACAC,OAAAC,KAAAhB,EAAA,+BAAAjE,YAKAkF,WAnBA,WAoBAd,KAAAe,QAAAC,MAEAlF,KAAA,OAAAoE,QAEAH,WAAAC,KAAAC,OAAAC,OAAAH,eAIAkB,QA5BA,WA6BA,IAAAC,EAAAlB,KACYP,EAAAC,EAAZC,MACAlD,KAAA,MACAmD,IAAAC,EAAA,2BACAC,OAAA,EACAlE,MAAAmE,WAAAC,KAAAC,OAAAC,OAAAH,WAAA9D,KAAA+D,KAAA/D,MACAkE,SACAC,cAAA,SAAAC,KAAAC,MAAAC,eAAAC,QAAA,WAEAC,QAAA,IACAC,QAAA,SAAA9E,GACA,WAAAA,EAAA+E,KACA/E,YAAAuF,QAAA,SAAAC,GACAA,EAAAC,QACAH,EAAApE,KAAAkE,KAAAI,KAKAF,EAAAI,SAAAC,OACAtE,QAAArB,EAAA4F,IACAC,QAAA,QAMAC,QAxDA,WAyDA,IAAAR,EAAAlB,KACYP,EAAAC,EAAZC,MACAlD,KAAA,MACAmD,IAAAC,EAAA,kCACAC,OAAA,EACAlE,MACAmE,WAAAmB,EAAAjB,OAAAC,OAAAH,YAEAI,SACAC,cAAA,SAAAC,KAAAC,MAAAC,eAAAC,QAAA,WAEAC,QAAA,IACAC,QAAA,SAAA9E,GACA,cAAAA,EAAA+E,KAAA,CACA,IACAO,EAAA1E,KAAAV,KAAAF,OAAAE,KACAoF,EAAA1E,KAAAC,KAAAb,OAAAa,KACAyE,EAAA1E,KAAAE,UAAAd,OAAAc,UACA,WAAAwE,EAAA1E,KAAAC,KACAyE,EAAA1E,KAAAG,KAAA,IAEAuE,EAAA1E,KAAAG,KAAAf,OAAAe,KAEAuE,EAAA1E,KAAAI,KAAAhB,OAAA+F,UACAT,EAAA1E,KAAAK,WAAAjB,OAAA+F,UAAA/F,OAAAgG,SACAV,EAAA1E,KAAAM,KAAAlB,OAAAkB,KACAoE,EAAA5E,QAAA,EACA,MAAAuF,GACAX,EAAA1E,KAAAV,KAAA,GACAoF,EAAA1E,KAAAC,KAAA,cACAyE,EAAA1E,KAAAE,UAAA,GACAwE,EAAA1E,KAAAG,KAAA,IACAuE,EAAA1E,KAAAI,KAAA,GACAsE,EAAA1E,KAAAK,aACAqE,EAAA1E,KAAAM,KAAA,GACAoE,EAAA5E,QAAA,EAEA4E,EAAA9E,WAAA,OAGA8E,EAAAI,SAAAC,OACAtE,QAAArB,EAAA4F,IACAC,QAAA,KAIAF,MAAA,WACAL,EAAArC,aAAA,EACAqC,EAAAI,SAAAC,OACAtE,QAAA,KACAwE,QAAA,QAKAK,QAhHA,WAgHA,IAAAC,EAAA/B,KACAkB,EAAAlB,KACAA,KAAAgC,MAAAxF,KAAAyF,SAAA,SAAAC,MACAH,EAAAI,SAAA,kBAAAC,KAAA,WACAC,QAAAC,IAAApB,EAAA1E,MACA0E,EAAArC,aAAA,EACA,IAAA0D,GACAxC,WAAAyC,OAAAtB,EAAAjB,OAAAC,OAAAH,YACA0C,QAAAD,OAAAtB,EAAA1E,KAAAM,MACAhB,KAAAoF,EAAA1E,KAAAV,KACAW,KAAAyE,EAAA1E,KAAAC,KACAC,UAAA8F,OAAAtB,EAAA1E,KAAAE,WACAC,KAAAuE,EAAA1E,KAAAG,MAEA,gBAAAuE,EAAA1E,KAAAC,MACA8F,EAAA,UAAAG,IAAAxB,EAAA1E,KAAAK,UAAA,IAAA8F,OAAA,uBACAJ,EAAA,QAAAG,IAAAxB,EAAA1E,KAAAK,UAAA,IAAA8F,OAAA,yBAEAJ,EAAA,UAAAG,IAAAxB,EAAA1E,KAAAI,MAAA+F,OAAA,uBACAJ,EAAA,QAAAG,IAAAxB,EAAA1E,KAAAI,MAAA+F,OAAA,wBAEwBlD,EAAAC,EAAxBC,MACAlD,KAAA,OACAmD,IAAAC,EAAA,kCACAC,OAAA,EACAlE,KAAAgH,IAAAL,GACApC,SACA0C,eAAA,mBACAzC,cAAA,SAAAC,KAAAC,MAAAC,eAAAC,QAAA,WAEAC,QAAA,IACAC,QAAA,SAAA9E,GACA,WAAAA,EAAA+E,MACAO,EAAArC,aAAA,EACAqC,EAAA9E,WAAA,EACA8E,EAAAI,UACArE,QAAA,OACAwE,QAAA,EACAhF,KAAA,cAIAyE,EAAArC,aAAA,EACAqC,EAAAI,SAAAC,OACAtE,QAAArB,EAAA4F,IACAC,QAAA,MAIAF,MAAA,WACAL,EAAArC,aAAA,EACAqC,EAAAI,SAAAC,OACAtE,QAAA,KACAwE,QAAA,YAQAqB,QA7KA,WA8KA,IAAA5B,EAAAlB,KACAkB,EAAA7E,YAAA,EACYoD,EAAAC,EAAZC,MACAlD,KAAA,OACAmD,IAAAC,EAAA,6BACAC,OAAA,EACAlE,KAAAgH,KACA7C,WAAAyC,OAAAtB,EAAAjB,OAAAC,OAAAH,cAEAI,SACAC,cAAA,SAAAC,KAAAC,MAAAC,eAAAC,QAAA,WAEAC,QAAA,IACAC,QAAA,SAAA9E,GACA,WAAAA,EAAA+E,MACAO,EAAA7E,YAAA,EACA6E,EAAA9E,WAAA,EACA8E,EAAAI,UACArE,QAAA,OACAwE,QAAA,EACAhF,KAAA,cAIAyE,EAAA7E,YAAA,EACA6E,EAAAI,SAAAC,OACAtE,QAAArB,EAAA4F,IACAC,QAAA,MAIAF,MAAA,WACAL,EAAA7E,YAAA,EACA6E,EAAAI,SAAAC,OACAtE,QAAA,KACAwE,QAAA,QAMAsB,YAvNA,WAwNA/C,KAAA9D,aAAA,EACA,IAAAgF,EAAAlB,KACAuC,GAAAxC,WAAAC,KAAAC,OAAAC,OAAAH,WAAA9D,KAAAiF,EAAAjF,KAAAH,KAAAoF,EAAArF,QAAAC,MACAkE,KAAAC,OAAAC,OAAA3B,aACAgE,EAAA,eAAAvC,KAAAC,OAAAC,OAAA3B,WACAyB,KAAAC,OAAAC,OAAA8C,cACAT,EAAA,gBAAAvC,KAAAC,OAAAC,OAAA8C,cAIYvD,EAAAC,EAAZC,MACAlD,KAAA,MACAmD,IAAAC,EAAA,8BACAC,OAAA,EACAlE,KAAA2G,EACApC,SACAC,cAAA,SAAAC,KAAAC,MAAAC,eAAAC,QAAA,WAEAC,QAAA,IACAC,QAAA,SAAA9E,GACAsF,EAAAhF,aAAA,EACA,WAAAN,EAAA+E,MACAO,EAAAlF,MAAAJ,OAAAI,MACAkF,EAAAnF,KAAAH,aAGAsF,EAAAI,SAAAC,OACAtE,QAAArB,EAAA4F,IACAC,QAAA,QAOAwB,kBA3PA,WA2PA,IAAAC,EAAAlD,KACAmD,EAAAnD,KAAA7D,KAAAiH,IAAA,SAAAhC,GAAA,OAAAA,EAAAiC,KACAnC,EAAAlB,KACAA,KAAAmC,SAAA,mBACA1F,KAAA,YACA2F,KAAA,WACAlB,EAAAxC,oBAAA,EAEA,IAAAwB,EAAA0C,KACA7C,WAAAyC,OAAAU,EAAAjD,OAAAC,OAAAH,YACAuD,6BAAApC,EAAA5C,gBAAAC,WACA4E,QAEgB1D,EAAAC,EAAhBC,MACAlD,KAAA,OACAmD,IAAAC,EAAA,sCACAC,OAAA,EACAlE,KAAAsE,EACAC,SACA0C,eAAA,mBACAzC,cAAA,SAAAC,KAAAC,MAAAC,eAAAC,QAAA,WAEAC,QAAA,IACAC,QAAA,SAAA9E,GACAsF,EAAAxC,oBAAA,EACA,WAAA9C,EAAA+E,MACAO,EAAAI,UACArE,QAAA,OACAwE,QAAA,EACAhF,KAAA,YAEAyE,EAAAH,QAAAC,MAAAlF,KAAA,SAAAoE,QAAAH,WAAAmB,EAAAjB,OAAAC,OAAAH,WAAAxB,WAAA2C,EAAA5C,gBAAAC,eAGA2C,EAAAI,SAAAC,OACAtE,QAAArB,EAAA4F,IACAC,QAAA,IAGAP,EAAA7C,wBAAA,EACA6C,EAAA6B,mBAGAQ,MAAA,eAKAC,aA3SA,WA4SA,IAAAtC,EAAAlB,KACYP,EAAAC,EAAZC,MACAlD,KAAA,MACAmD,IAAAC,EAAA,0BACAC,OAAA,EACAlE,MAAAmE,WAAAC,KAAAC,OAAAC,OAAAH,YACAI,SACAC,cAAA,SAAAC,KAAAC,MAAAC,eAAAC,QAAA,WAEAC,QAAA,IACAC,QAAA,SAAA9E,GACA,WAAAA,EAAA+E,MACAO,EAAAzC,MAAA7C,OACAsF,EAAA5C,gBAAAC,WAAA2C,EAAAzC,MAAA,GAAA4E,GACAnC,EAAA5B,QAAAf,WAAA2C,EAAAzC,MAAA,GAAA4E,IAGAnC,EAAAI,SAAAC,OACAtE,QAAArB,EAAA4F,IACAC,QAAA,QAMAgC,YArUA,WAsUAzD,KAAAwD,eACAxD,KAAA3B,wBAAA,GAIAqF,UAAA,SAAAC,EAAAC,GAAA,IAAAC,EAAA7D,KACAA,KAAAmC,SAAA,kBACA1F,KAAA,YACA2F,KAAA,WACAyB,EAAA3H,aAAA,EAEA,IAAAgF,EAAA2C,EACgBpE,EAAAC,EAAhBC,MACAlD,KAAA,OACAmD,IAAAC,EAAA,6BACAC,OAAA,EACAlE,KAAAgH,KACA7C,WAAAyC,OAAAqB,EAAA5D,OAAAC,OAAAH,YACAoD,KAAAS,EAAAP,MACAlD,SACA0C,eAAA,mBACAzC,cAAA,SAAAC,KAAAC,MAAAC,eAAAC,QAAA,WAEAC,QAAA,IACAC,QAAA,SAAA9E,GACA,WAAAA,EAAA+E,KACAO,EAAAI,UACArE,QAAA,OACAwE,QAAA,EACAhF,KAAA,YAGAyE,EAAAI,SAAAC,OACAtE,QAAArB,EAAA4F,IACAC,QAAA,IAGAP,EAAA6B,mBAIAQ,MAAA,eAGAO,oBAlXA,SAkXAC,GACA/D,KAAA/D,KAAA8H,EACA/D,KAAA+C,eAEAiB,WAAA,SAAA7H,GACAA,EAAA8H,OAAA,GACAjE,KAAA7D,OACA6D,KAAArB,QAAA,GAEAqB,KAAArB,QAAA,GAIAuF,YAAA,eAAAC,EAAAnE,KACAmD,EAAAnD,KAAA7D,KAAAiH,IAAA,SAAAhC,GAAA,OAAAA,EAAAiC,KACAnC,EAAAlB,KACAA,KAAAmC,SAAA,mBACA1F,KAAA,YACA2F,KAAA,WACAlB,EAAAhF,aAAA,EAEgBuD,EAAAC,EAAhBC,MACAlD,KAAA,OACAmD,IAAAC,EAAA,6BACAC,OAAA,EACAlE,KAAAgH,KAAA7C,WAAAyC,OAAA2B,EAAAlE,OAAAC,OAAAH,YAAAoD,QACAhD,SACA0C,eAAA,mBACAzC,cAAA,SAAAC,KAAAC,MAAAC,eAAAC,QAAA,WAEAC,QAAA,IACAC,QAAA,SAAA9E,GACAsF,EAAAhF,aAAA,EACA,WAAAN,EAAA+E,KACAO,EAAAI,UACArE,QAAA,OACAwE,QAAA,EACAhF,KAAA,YAIAyE,EAAAI,SAAAC,OACAtE,QAAArB,EAAA4F,IACAC,QAAA,IAGAP,EAAA6B,mBAGAQ,MAAA,eAKAa,WAAA,SAAAT,EAAAC,GACA5D,KAAAwD,eACAxD,KAAApB,iBAAA,EACAoB,KAAAd,SAAAmF,OAAAT,IAGAU,UAAA,WACAtE,KAAAwD,eACAxD,KAAAb,gBAAA,GAGAoF,WAAA,eAAAC,EAAAxE,KACAkB,EAAAlB,KACAA,KAAAgC,MAAA9C,SAAA+C,SAAA,SAAAC,GACAA,GACAsC,EAAArC,SAAA,kBAAAC,KAAA,WACAlB,EAAArC,aAAA,EAEA,IAAA0D,EAAAK,KACA7C,WAAAyC,OAAAgC,EAAAvE,OAAAC,OAAAH,YACAsD,GAAAb,OAAAtB,EAAAhC,SAAAmE,IACAtE,SAAAmC,EAAAhC,SAAAH,SACAuE,6BAAAd,OAAAgC,EAAAtF,SAAAF,2BACAC,YAAAiC,EAAAhC,SAAAD,cACwBQ,EAAAC,EAAxBC,MACAlD,KAAA,OACAmD,IAAAC,EAAA,gCACAC,OAAA,EACAlE,KAAA2G,EACApC,SACAC,cAAA,SAAAC,KAAAC,MAAAC,eAAAC,QAAA,WAEAC,QAAA,IACAC,QAAA,SAAA9E,GACAsF,EAAArC,aAAA,EACA,WAAAjD,EAAA+E,MACAO,EAAAI,UACArE,QAAA,OACAwE,QAAA,EACAhF,KAAA,YAEAyE,EAAAc,MAAA,SAAAyC,cACAvD,EAAAtC,iBAAA,EACAsC,EAAA6B,gBACAnH,EAAA+E,KACAO,EAAAI,SAAAC,OACAtE,QAAArB,EAAA4F,IACAC,QAAA,aAeAiD,UAAA,eAAAC,EAAA3E,KACAA,KAAAgC,MAAA1C,QAAA2C,SAAA,SAAAC,GACA,GAAAA,EAAA,CACA,IAAAhB,EAAAyD,EACAA,EAAAxC,SAAA,kBAAAC,KAAA,WACAlB,EAAA9B,YAAA,EAEA,IAAAmD,EAAAK,KACA7C,WAAAyC,OAAAmC,EAAA1E,OAAAC,OAAAH,YACAuD,6BAAAqB,EAAArF,QAAAf,WACAQ,SAAAmC,EAAA5B,QAAAP,SACAE,YAAAiC,EAAA5B,QAAAL,cACwBQ,EAAAC,EAAxBC,MACAlD,KAAA,OACAmD,IAAAC,EAAA,6BACAC,OAAA,EACAlE,KAAA2G,EACApC,SACAC,cAAA,SAAAC,KAAAC,MAAAC,eAAAC,QAAA,WAEAC,QAAA,IACAC,QAAA,SAAA9E,GACAsF,EAAA9B,YAAA,EACA,WAAAxD,EAAA+E,MACAO,EAAAI,UACArE,QAAA,OACAwE,QAAA,EACAhF,KAAA,YAEAyE,EAAAc,MAAA,QAAAyC,cACAvD,EAAA/B,gBAAA,EACA+B,EAAA6B,eACA,WAAAnH,EAAA+E,KACAO,EAAAI,SAAAC,OACAtE,QAAArB,EAAA4F,IACAC,QAAA,KAGAP,EAAAI,SAAAC,OACAtE,QAAArB,EAAA4F,IACAC,QAAA,IAEAP,EAAAc,MAAA,QAAAyC,cACAvD,EAAA/B,gBAAA,EACA+B,EAAA6B,yBASA6B,QA3qBA,WA4qBA5E,KAAA+C,cACA/C,KAAAiB,YCt0Be4D,GADEC,OAFjB,WAA0B,IAAAC,EAAA/E,KAAagF,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,WAAAA,EAAA,UAAkCE,aAAaC,OAAA,QAAgBC,OAAQC,KAAA,MAAWL,EAAA,WAAgBI,OAAOE,QAAA,EAAAC,MAAAV,EAAAlJ,SAAkC6J,UAAWC,OAAA,SAAAC,GAA0BA,EAAAC,qBAA2BX,EAAA,gBAAAA,EAAA,YAAoCI,OAAOQ,YAAA,MAAmBJ,UAAWK,MAAA,SAAAH,GAAyB,OAAAA,EAAAnJ,KAAAuJ,QAAA,QAAAjB,EAAAkB,GAAAL,EAAAM,QAAA,WAAAN,EAAAO,IAAA,SAAsF,KAAepB,EAAAhC,YAAA6C,KAAgCH,OAAQpI,MAAA0H,EAAAlJ,QAAA,KAAAuK,SAAA,SAAAC,GAAkDtB,EAAAuB,KAAAvB,EAAAlJ,QAAA,wBAAAwK,IAAAE,OAAAF,IAA0EG,WAAA,mBAA4B,GAAAzB,EAAA0B,GAAA,KAAAvB,EAAA,gBAAAA,EAAA,aAAqDI,OAAO7I,KAAA,WAAiBiK,IAAKC,MAAA5B,EAAAhC,eAAyBgC,EAAA0B,GAAA,YAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,gBAAAA,EAAA,aAAoEI,OAAO7I,KAAA,WAAiBiK,IAAKC,MAAA5B,EAAAT,aAAuBS,EAAA0B,GAAA,cAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,gBAAAA,EAAA,aAAsEI,OAAO7I,KAAA,UAAAmK,SAAA7B,EAAApG,QAAuC+H,IAAKC,MAAA5B,EAAAtB,eAAyBsB,EAAA0B,GAAA,cAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,gBAAAA,EAAA,aAAsEI,OAAO7I,KAAA,WAAiBiJ,UAAWiB,MAAA,SAAAf,GAAyB,OAAAb,EAAAvF,YAAAoG,OAAiCb,EAAA0B,GAAA,cAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,aAAmDI,OAAO7I,KAAA,WAAiBiJ,UAAWiB,MAAA,SAAAf,GAAyB,OAAAb,EAAArD,QAAAkE,OAA6BV,EAAA,OAAAH,EAAA0B,GAAA,cAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,aAA6DI,OAAO7I,KAAA,WAAiBiJ,UAAWiB,MAAA,SAAAf,GAAyB,OAAAb,EAAAjE,WAAA8E,OAAgCV,EAAA,OAAAH,EAAA0B,GAAA,oBAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,aAAmEE,aAAayB,MAAA,MAAAC,KAAA,OAA2BxB,OAAQyB,MAAA,OAAAC,QAAAjC,EAAA3I,UAAA6K,wBAAA,GAAoEP,IAAKQ,iBAAA,SAAAtB,GAAkCb,EAAA3I,UAAAwJ,MAAuBV,EAAA,WAAgBiC,IAAA,OAAA7B,OAAkBG,MAAAV,EAAAvI,KAAA4K,cAAA,QAAAC,MAAAtC,EAAAhI,aAA8DmI,EAAA,gBAAqBI,OAAOhI,MAAA,QAAAgK,KAAA,UAA+BpC,EAAA,YAAiBI,OAAOQ,YAAA,WAAwBL,OAAQpI,MAAA0H,EAAAvI,KAAA,KAAA4J,SAAA,SAAAC,GAA+CtB,EAAAuB,KAAAvB,EAAAvI,KAAA,wBAAA6J,IAAAE,OAAAF,IAAuEG,WAAA,gBAAyB,GAAAzB,EAAA0B,GAAA,KAAAvB,EAAA,gBAAqCI,OAAOhI,MAAA,MAAAgK,KAAA,UAA6BpC,EAAA,aAAkBI,OAAOQ,YAAA,OAAoBL,OAAQpI,MAAA0H,EAAAvI,KAAA,KAAA4J,SAAA,SAAAC,GAA+CtB,EAAAuB,KAAAvB,EAAAvI,KAAA,OAAA6J,IAAgCG,WAAA,cAAyBzB,EAAAwC,GAAAxC,EAAA,cAAA3D,GAAkC,OAAA8D,EAAA,aAAuBiB,IAAA/E,EAAA/D,MAAAiI,OAAsBhI,MAAA8D,EAAA9D,MAAAD,MAAA+D,EAAA/D,WAAyC,OAAA0H,EAAA0B,GAAA,qBAAA1B,EAAAvI,KAAAC,KAAAyI,EAAA,gBAA0EI,OAAOhI,MAAA,MAAAgK,KAAA,eAAkCpC,EAAA,UAAeI,OAAOC,KAAA,MAAWL,EAAA,UAAeI,OAAOC,KAAA,MAAWL,EAAA,YAAiBI,OAAOQ,YAAA,MAAmBL,OAAQpI,MAAA0H,EAAAvI,KAAA,UAAA4J,SAAA,SAAAC,GAAoDtB,EAAAuB,KAAAvB,EAAAvI,KAAA,YAAAuI,EAAAyC,GAAAnB,KAA6CG,WAAA,qBAA8B,GAAAzB,EAAA0B,GAAA,KAAAvB,EAAA,UAA+BI,OAAOC,KAAA,KAAUL,EAAA,aAAkBI,OAAOQ,YAAA,OAAoBL,OAAQpI,MAAA0H,EAAAvI,KAAA,KAAA4J,SAAA,SAAAC,GAA+CtB,EAAAuB,KAAAvB,EAAAvI,KAAA,OAAA6J,IAAgCG,WAAA,cAAyBzB,EAAAwC,GAAAxC,EAAA,cAAA3D,GAAkC,OAAA8D,EAAA,aAAuBiB,IAAA/E,EAAA/D,MAAAiI,OAAsBhI,MAAA8D,EAAA9D,MAAAD,MAAA+D,EAAA/D,WAAyC,eAAA0H,EAAA0C,KAAA1C,EAAA0B,GAAA,qBAAA1B,EAAAvI,KAAAC,KAAAyI,EAAA,gBAA2FI,OAAOhI,MAAA,QAAAgK,KAAA,eAAoCpC,EAAA,kBAAuBI,OAAO7I,KAAA,gBAAAiL,iBAAA3C,EAAAnH,eAAA+J,kBAAA,UAAAC,oBAAA,OAAAC,kBAAA,OAAAC,MAAA,SAA2JrC,OAAQpI,MAAA0H,EAAAvI,KAAA,UAAA4J,SAAA,SAAAC,GAAoDtB,EAAAuB,KAAAvB,EAAAvI,KAAA,YAAA6J,IAAqCG,WAAA,qBAA8B,GAAAzB,EAAA0C,KAAA1C,EAAA0B,GAAA,gBAAA1B,EAAAvI,KAAAC,KAAAyI,EAAA,gBAA2EI,OAAOhI,MAAA,QAAAgK,KAAA,UAA+BpC,EAAA,kBAAuBI,OAAO7I,KAAA,WAAAqJ,YAAA,SAAA4B,iBAAA3C,EAAAxH,gBAA6EkI,OAAQpI,MAAA0H,EAAAvI,KAAA,KAAA4J,SAAA,SAAAC,GAA+CtB,EAAAuB,KAAAvB,EAAAvI,KAAA,OAAA6J,IAAgCG,WAAA,gBAAyB,GAAAzB,EAAA0C,KAAA1C,EAAA0B,GAAA,KAAAvB,EAAA,gBAA8CI,OAAOhI,MAAA,QAAAgK,KAAA,UAA+BpC,EAAA,aAAkBI,OAAOQ,YAAA,QAAqBL,OAAQpI,MAAA0H,EAAAvI,KAAA,KAAA4J,SAAA,SAAAC,GAA+CtB,EAAAuB,KAAAvB,EAAAvI,KAAA,OAAA6J,IAAgCG,WAAA,cAAyBzB,EAAAwC,GAAAxC,EAAA,cAAA3D,EAAAuC,GAAwC,OAAAuB,EAAA,aAAuBiB,IAAAxC,EAAA,GAAA2B,OAAoBhI,MAAA8D,EAAAtF,KAAAuB,MAAA+D,EAAAiC,QAAqC,OAAA0B,EAAA0B,GAAA,KAAAvB,EAAA,gBAAAA,EAAA,aAAwDI,OAAO7I,KAAA,UAAAsL,QAAAhD,EAAAlG,aAA2C6G,UAAWiB,MAAA,SAAAf,GAAyB,OAAAb,EAAAjD,QAAA8D,OAA6Bb,EAAA0B,GAAA,QAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,aAA6CI,OAAO7I,KAAA,SAAAsL,QAAAhD,EAAA1I,WAAAuK,SAAA7B,EAAAzI,QAA+DoJ,UAAWiB,MAAA,SAAAf,GAAyB,OAAAb,EAAAjC,QAAA8C,OAA6Bb,EAAA0B,GAAA,oBAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,aAAyDE,aAAayB,MAAA,MAAAC,KAAA,SAA6BxB,OAAQyB,MAAA,KAAAC,QAAAjC,EAAAnG,gBAAAqI,wBAAA,GAAwEP,IAAKQ,iBAAA,SAAAtB,GAAkCb,EAAAnG,gBAAAgH,MAA6BV,EAAA,WAAgBiC,IAAA,WAAA7B,OAAsBG,MAAAV,EAAA7F,SAAAmI,MAAAtC,EAAAjG,cAAAsI,cAAA,UAAqElC,EAAA,gBAAqBI,OAAOhI,MAAA,KAAAgK,KAAA,cAAgCpC,EAAA,YAAiBI,OAAO0C,gBAAA,OAAsBvC,OAAQpI,MAAA0H,EAAA7F,SAAA,SAAAkH,SAAA,SAAAC,GAAuDtB,EAAAuB,KAAAvB,EAAA7F,SAAA,4BAAAmH,IAAAE,OAAAF,IAA+EG,WAAA,wBAAiC,GAAAzB,EAAA0B,GAAA,KAAAvB,EAAA,gBAAqCI,OAAOhI,MAAA,QAAA8J,cAAA,OAAAE,KAAA,+BAAyEpC,EAAA,aAAkBI,OAAOQ,YAAA,MAAmBL,OAAQpI,MAAA0H,EAAA7F,SAAA,0BAAAkH,SAAA,SAAAC,GAAwEtB,EAAAuB,KAAAvB,EAAA7F,SAAA,4BAAAmH,IAAyDG,WAAA,uCAAkDzB,EAAAwC,GAAAxC,EAAA,eAAA3D,EAAAuC,GAAyC,OAAAuB,EAAA,aAAuBiB,IAAAxC,EAAA,GAAA2B,OAAoBhI,MAAA8D,EAAAtF,KAAAuB,MAAA+D,EAAAiC,QAAqC,OAAA0B,EAAA0B,GAAA,KAAAvB,EAAA,gBAAwCI,OAAOhI,MAAA,KAAAgK,KAAA,iBAAmCpC,EAAA,YAAiBI,OAAO7I,KAAA,WAAAwL,KAAA,GAA2BxC,OAAQpI,MAAA0H,EAAA7F,SAAA,YAAAkH,SAAA,SAAAC,GAA0DtB,EAAAuB,KAAAvB,EAAA7F,SAAA,+BAAAmH,IAAAE,OAAAF,IAAkFG,WAAA,2BAAoC,OAAAzB,EAAA0B,GAAA,KAAAvB,EAAA,OAAgCgD,YAAA,gBAAA5C,OAAmC6C,KAAA,UAAgBA,KAAA,WAAejD,EAAA,aAAkBQ,UAAUiB,MAAA,SAAAf,GAAyBb,EAAAnG,iBAAA,MAA8BmG,EAAA0B,GAAA,QAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,aAA6CI,OAAO7I,KAAA,UAAAsL,QAAAhD,EAAAlG,aAA2C6G,UAAWiB,MAAA,SAAAf,GAAyB,OAAAb,EAAAR,WAAAqB,OAAgCb,EAAA0B,GAAA,gBAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,aAAqDE,aAAayB,MAAA,MAAAC,KAAA,SAA6BxB,OAAQyB,MAAA,KAAAC,QAAAjC,EAAA5F,eAAA8H,wBAAA,GAAuEP,IAAKQ,iBAAA,SAAAtB,GAAkCb,EAAA5F,eAAAyG,MAA4BV,EAAA,WAAgBiC,IAAA,UAAA7B,OAAqBG,MAAAV,EAAAzF,QAAA8H,cAAA,OAAAC,MAAAtC,EAAA1F,gBAAmE6F,EAAA,gBAAqBI,OAAOhI,MAAA,KAAAgK,KAAA,cAAgCpC,EAAA,YAAiBI,OAAO0C,gBAAA,OAAsBvC,OAAQpI,MAAA0H,EAAAzF,QAAA,SAAA8G,SAAA,SAAAC,GAAsDtB,EAAAuB,KAAAvB,EAAAzF,QAAA,4BAAA+G,IAAAE,OAAAF,IAA8EG,WAAA,uBAAgC,GAAAzB,EAAA0B,GAAA,KAAAvB,EAAA,gBAAqCI,OAAOhI,MAAA,QAAA8J,cAAA,OAAAE,KAAA,gBAA0DpC,EAAA,aAAkBI,OAAOQ,YAAA,MAAmBL,OAAQpI,MAAA0H,EAAAzF,QAAA,WAAA8G,SAAA,SAAAC,GAAwDtB,EAAAuB,KAAAvB,EAAAzF,QAAA,aAAA+G,IAAyCG,WAAA,uBAAkCzB,EAAAwC,GAAAxC,EAAA,eAAA3D,EAAAuC,GAAyC,OAAAuB,EAAA,aAAuBiB,IAAAxC,EAAA,GAAA2B,OAAoBhI,MAAA8D,EAAAtF,KAAAuB,MAAA+D,EAAAiC,QAAqC,OAAA0B,EAAA0B,GAAA,KAAAvB,EAAA,gBAAwCI,OAAOhI,MAAA,KAAAgK,KAAA,iBAAmCpC,EAAA,YAAiBI,OAAO7I,KAAA,WAAAwL,KAAA,GAA2BxC,OAAQpI,MAAA0H,EAAAzF,QAAA,YAAA8G,SAAA,SAAAC,GAAyDtB,EAAAuB,KAAAvB,EAAAzF,QAAA,+BAAA+G,IAAAE,OAAAF,IAAiFG,WAAA,0BAAmC,OAAAzB,EAAA0B,GAAA,KAAAvB,EAAA,OAAgCgD,YAAA,gBAAA5C,OAAmC6C,KAAA,UAAgBA,KAAA,WAAejD,EAAA,aAAkBQ,UAAUiB,MAAA,SAAAf,GAAyBb,EAAA5F,gBAAA,MAA6B4F,EAAA0B,GAAA,QAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,aAA6CI,OAAO7I,KAAA,UAAAsL,QAAAhD,EAAA3F,YAA0CsG,UAAWiB,MAAA,SAAAf,GAAyB,OAAAb,EAAAL,UAAAkB,OAA+Bb,EAAA0B,GAAA,gBAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,aAAqDE,aAAayB,MAAA,MAAAC,KAAA,OAA2BxB,OAAQyB,MAAA,SAAAC,QAAAjC,EAAA1G,uBAAA4I,wBAAA,GAAmFP,IAAKQ,iBAAA,SAAAtB,GAAkCb,EAAA1G,uBAAAuH,MAAoCV,EAAA,WAAgBiC,IAAA,kBAAA7B,OAA6BG,MAAAV,EAAAzG,gBAAA8I,cAAA,OAAAC,MAAAtC,EAAAvG,wBAAmF0G,EAAA,gBAAqBI,OAAOhI,MAAA,KAAAgK,KAAA,gBAAkCpC,EAAA,aAAkBI,OAAOQ,YAAA,SAAsBL,OAAQpI,MAAA0H,EAAAzG,gBAAA,WAAA8H,SAAA,SAAAC,GAAgEtB,EAAAuB,KAAAvB,EAAAzG,gBAAA,aAAA+H,IAAiDG,WAAA,+BAA0CzB,EAAAwC,GAAAxC,EAAA,eAAA3D,EAAAuC,GAAyC,OAAAuB,EAAA,aAAuBiB,IAAAxC,EAAA,GAAA2B,OAAoBhI,MAAA8D,EAAAtF,KAAAuB,MAAA+D,EAAAiC,QAAqC,WAAA0B,EAAA0B,GAAA,KAAAvB,EAAA,OAAmCgD,YAAA,gBAAA5C,OAAmC6C,KAAA,UAAgBA,KAAA,WAAejD,EAAA,aAAkBQ,UAAUiB,MAAA,SAAAf,GAAyBb,EAAA1G,wBAAA,MAAqC0G,EAAA0B,GAAA,QAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,aAA6CI,OAAO7I,KAAA,UAAAsL,QAAAhD,EAAArG,oBAAkDgH,UAAWiB,MAAA,SAAAf,GAAyB,OAAAb,EAAA9B,kBAAA2C,OAAuCb,EAAA0B,GAAA,gBAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,YAAoDkD,aAAatM,KAAA,UAAAuM,QAAA,YAAAhL,MAAA0H,EAAA,YAAAyB,WAAA,gBAAoFpB,aAAeyB,MAAA,QAAevB,OAAQ1J,KAAAmJ,EAAAhJ,KAAAuM,wBAAA,IAA2C5B,IAAK6B,mBAAAxD,EAAAf,cAAmCkB,EAAA,mBAAwBI,OAAO7I,KAAA,YAAA+L,YAAA,QAAqCzD,EAAA0B,GAAA,KAAAvB,EAAA,mBAAoCI,OAAOgC,KAAA,WAAAhK,MAAA,OAAAkL,YAAA,MAAAC,SAAA,GAAAC,wBAAA,IAA4FC,YAAA5D,EAAA6D,KAAsBzC,IAAA,UAAA0C,GAAA,SAAAC,GAAiC,OAAA5D,EAAA,WAAsBI,OAAOxJ,KAAA,cAAmBiJ,EAAA0B,GAAA,KAAAvB,EAAA,eAAgCE,aAAa2D,kBAAA,QAAyBzD,OAAQ0D,IAAMlN,KAAA,SAAAoE,QAA0B+I,QAAAH,EAAAlF,IAAAP,QAAyB0B,EAAA0B,GAAA1B,EAAAmE,GAAAJ,EAAAlF,IAAA7E,oBAA4CgG,EAAA0B,GAAA,KAAAvB,EAAA,mBAAoCI,OAAOgC,KAAA,cAAAhK,MAAA,KAAAkL,YAAA,MAAAC,SAAA,GAAAC,wBAAA,MAA8F3D,EAAA0B,GAAA,KAAAvB,EAAA,mBAAoCI,OAAOgC,KAAA,aAAAhK,MAAA,MAAAkL,YAAA,MAAAC,SAAA,GAAAC,wBAAA,MAA8F3D,EAAA0B,GAAA,KAAAvB,EAAA,mBAAoCI,OAAOgC,KAAA,aAAAhK,MAAA,OAAAkL,YAAA,MAAAC,SAAA,GAAAC,wBAAA,MAA+F3D,EAAA0B,GAAA,KAAAvB,EAAA,mBAAoCI,OAAOhI,MAAA,KAAAkL,YAAA,OAA+BG,YAAA5D,EAAA6D,KAAsBzC,IAAA,UAAA0C,GAAA,SAAAC,GAAiC,OAAA5D,EAAA,aAAwBI,OAAO7I,KAAA,SAAA0M,KAAA,SAA+BzC,IAAKC,MAAA,SAAAf,GAAyB,OAAAb,EAAArB,UAAAoF,EAAAM,OAAAN,EAAAlF,SAAgDmB,EAAA0B,GAAA,QAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,aAA6CI,OAAO7I,KAAA,OAAA0M,KAAA,SAA6BzC,IAAKC,MAAA,SAAAf,GAAyB,OAAAb,EAAAX,WAAA0E,EAAAM,OAAAN,EAAAlF,SAAiDmB,EAAA0B,GAAA,gBAAsB,GAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,UAA+BgD,YAAA,UAAA5C,OAA6BC,KAAA,MAAWL,EAAA,aAAkBI,OAAO7I,KAAA,SAAAmK,SAAA,IAAA5G,KAAA7D,KAAA8H,QAAgDyC,IAAKC,MAAA5B,EAAAb,eAAyBa,EAAA0B,GAAA,UAAA1B,EAAA0B,GAAA,KAAAvB,EAAA,iBAAmDE,aAAaiE,MAAA,SAAgB/D,OAAQgE,OAAA,oBAAAC,YAAA,GAAAC,aAAAzE,EAAA/I,OAAmE0K,IAAK+C,iBAAA1E,EAAAjB,wBAA0C,QAE18V4F,oBCCjB,IAcAC,EAdyBC,EAAQ,OAcjCC,CACElO,EACAkJ,GATF,EAVA,SAAAiF,GACEF,EAAQ,SAaV,kBAEA,MAUeG,EAAA,QAAAJ,EAAiB","file":"static/js/18.0bf25db9ce0cd001dc52.js","sourcesContent":["<template>\n    <section>\n        <!--工具条-->\n        <el-col :span=\"24\" style=\"height: 46px\">\n            <el-form :inline=\"true\" :model=\"filters\" @submit.native.prevent>\n                <el-form-item>\n                    <el-input v-model.trim=\"filters.name\" placeholder=\"名称\" @keyup.enter.native=\"getCaseList\"></el-input>\n                </el-form-item>\n                <el-form-item>\n                    <el-button type=\"primary\" @click=\"getCaseList\">查询</el-button>\n                </el-form-item>\n                <el-form-item>\n                    <el-button type=\"primary\" @click=\"handleAdd\">新增用例</el-button>\n                </el-form-item>\n                <el-form-item>\n                    <el-button type=\"primary\" :disabled=\"update\" @click=\"changeGroup\">修改分组</el-button>\n                </el-form-item>\n                <el-form-item>\n                    <el-button type=\"primary\" @click.native=\"DownloadApi\">下载用例</el-button>\n                </el-form-item>\n                <el-button type=\"primary\" @click.native=\"getTask\"><div>设置定时任务</div></el-button>\n                <el-button type=\"primary\" @click.native=\"TestReport\"><div>查看报告</div></el-button>\n            </el-form>\n        </el-col>\n        <el-dialog title=\"定时任务\" :visible.sync=\"taskVShow\"  :close-on-click-modal=\"false\" style=\"width: 70%; left: 15%\">\n            <el-form ref=\"form\" :model=\"form\" label-width=\"100px\" :rules=\"formRules\">\n                <el-form-item label=\"任务名称：\" prop=\"name\">\n                    <el-input v-model.trim=\"form.name\" placeholder=\"请输入任务名称\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"类型：\" prop=\"type\">\n                    <el-select v-model=\"form.type\" placeholder=\"请选择\">\n                        <el-option v-for=\"item in type\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"间隔：\" prop=\"frequency\" v-if=\"form.type === 'circulation'\">\n                    <el-row :span=\"24\">\n                        <el-col :span=\"14\">\n                            <el-input v-model.number=\"form.frequency\" placeholder=\"间隔\"></el-input>\n                        </el-col>\n                        <el-col :span=\"5\">\n                            <el-select v-model=\"form.unit\" placeholder=\"请选择\">\n                                <el-option v-for=\"item in unit\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\"></el-option>\n                            </el-select>\n                        </el-col>\n                    </el-row>\n                </el-form-item>\n                <el-form-item label=\"执行时间：\" prop=\"timeArray\" v-if=\"form.type === 'circulation'\">\n                    <el-date-picker  v-model=\"form.timeArray\" type=\"datetimerange\" :picker-options=\"pickerOptions2\"\n                                     range-separator=\"   至   \" start-placeholder=\"开始日期\" end-placeholder=\"结束日期\" align=\"right\" ></el-date-picker>\n                </el-form-item>\n                <el-form-item label=\"执行时间：\" prop=\"time\" v-if=\"form.type === 'timing'\">\n                    <el-date-picker v-model=\"form.time\" type=\"datetime\" placeholder=\"选择日期时间\" :picker-options=\"pickerOptions1\"></el-date-picker>\n                </el-form-item>\n                <el-form-item label=\"HOST：\" prop=\"Host\">\n                    <el-select v-model=\"form.Host\"  placeholder=\"测试环境\">\n                        <el-option v-for=\"(item,index) in Host\" :key=\"index+''\" :label=\"item.name\" :value=\"item.id\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item>\n                    <el-button type=\"primary\" :loading=\"editLoading\" @click.native=\"addTask\">创建</el-button>\n                    <el-button type=\"danger\" :loading=\"delLoading\" @click.native=\"delTask\" :disabled=\"disDel\">删除</el-button>\n                </el-form-item>\n            </el-form>\n        </el-dialog>\n        <el-dialog title=\"编辑\" :visible.sync=\"editFormVisible\" :close-on-click-modal=\"false\" style=\"width: 65%; left: 17.5%\">\n            <el-form :model=\"editForm\"  :rules=\"editFormRules\" ref=\"editForm\" label-width=\"80px\">\n                <el-form-item label=\"名称\" prop=\"caseName\">\n                    <el-input v-model.trim=\"editForm.caseName\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"接口分组:\" label-width=\"83px\" prop=\"automationGroupLevelFirst\">\n                    <el-select v-model=\"editForm.automationGroupLevelFirst\" placeholder=\"分组\">\n                        <el-option v-for=\"(item,index) in group\" :key=\"index+''\" :label=\"item.name\" :value=\"item.id\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"描述\" prop='description'>\n                    <el-input type=\"textarea\" :rows=\"4\" v-model.trim=\"editForm.description\"></el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"editFormVisible = false\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"editSubmit\" :loading=\"editLoading\">提交</el-button>\n            </div>\n        </el-dialog>\n\n        <!--新增界面-->\n        <el-dialog title=\"新增\" :visible.sync=\"addFormVisible\" :close-on-click-modal=\"false\" style=\"width: 65%; left: 17.5%\">\n            <el-form :model=\"addForm\" label-width=\"80px\" :rules=\"addFormRules\" ref=\"addForm\">\n                <el-form-item label=\"名称\" prop=\"caseName\">\n                    <el-input v-model.trim=\"addForm.caseName\" auto-complete=\"off\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"接口分组:\" label-width=\"83px\" prop=\"firstGroup\">\n                    <el-select v-model=\"addForm.firstGroup\" placeholder=\"分组\">\n                        <el-option v-for=\"(item,index) in group\" :key=\"index+''\" :label=\"item.name\" :value=\"item.id\"></el-option>\n                    </el-select>\n                </el-form-item>\n                <el-form-item label=\"描述\" prop='description'>\n                    <el-input type=\"textarea\" :rows=\"4\" v-model.trim=\"addForm.description\"></el-input>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"addFormVisible = false\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"addSubmit\" :loading=\"addLoading\">提交</el-button>\n            </div>\n        </el-dialog>\n        <el-dialog title=\"修改所属分组\" :visible.sync=\"updateGroupFormVisible\" :close-on-click-modal=\"false\" style=\"width: 60%; left: 20%\">\n            <el-form :model=\"updateGroupForm\" label-width=\"80px\"  :rules=\"updateGroupFormRules\" ref=\"updateGroupForm\">\n                <el-form-item label=\"分组\" prop=\"firstGroup\">\n                    <el-select v-model=\"updateGroupForm.firstGroup\" placeholder=\"请选择分组\">\n                        <el-option v-for=\"(item,index) in group\" :key=\"index+''\" :label=\"item.name\" :value=\"item.id\">\n                        </el-option>\n                    </el-select>\n                </el-form-item>\n            </el-form>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"updateGroupFormVisible = false\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"updateGroupSubmit\" :loading=\"updateGroupLoading\">提交</el-button>\n            </div>\n        </el-dialog>\n\n        <!--列表-->\n        <el-table :data=\"Case\" highlight-current-row v-loading=\"listLoading\" @selection-change=\"selsChange\" style=\"width: 100%;\">\n            <el-table-column type=\"selection\" min-width=\"5%\">\n            </el-table-column>\n            <el-table-column prop=\"caseName\" label=\"用例名称\" min-width=\"20%\" sortable show-overflow-tooltip>\n                <template slot-scope=\"scope\">\n                    <el-icon name=\"caseName\"></el-icon>\n                    <router-link :to=\"{ name: '用例接口列表', params: {case_id: scope.row.id}}\" style='text-decoration: none;'>{{ scope.row.caseName }}</router-link>\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"description\" label=\"描述\" min-width=\"35%\" sortable show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"createUser\" label=\"创建人\" min-width=\"10%\" sortable show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column prop=\"updateTime\" label=\"更新日期\" min-width=\"15%\" sortable show-overflow-tooltip>\n            </el-table-column>\n            <el-table-column label=\"操作\" min-width=\"15%\">\n                <template slot-scope=\"scope\">\n                    <el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\">删除</el-button>\n                    <el-button type=\"info\" size=\"small\" @click=\"handleEdit(scope.$index, scope.row)\">修改</el-button>\n                </template>\n            </el-table-column>\n        </el-table>\n\n        <!--工具条-->\n        <el-col :span=\"24\" class=\"toolbar\">\n            <el-button type=\"danger\" @click=\"batchRemove\" :disabled=\"this.sels.length===0\">批量删除</el-button>\n            <el-pagination layout=\"prev, pager, next\" @current-change=\"handleCurrentChange\" :page-size=\"20\" :page-count=\"total\" style=\"float:right;\">\n            </el-pagination>\n        </el-col>\n    </section>\n</template>\n\n<script>\n    import { test } from '../../../api/api'\n    import $ from 'jquery'\n    import moment from \"moment\"\n    export default {\n        data() {\n            return {\n                filters: {\n                    name: ''\n                },\n                Case: [],\n                total: 0,\n                page: 1,\n                listLoading: false,\n                sels: [],//列表选中列\n                taskVShow: false,\n                delLoading: false,\n                disDel: true,\n                TestStatus: false,\n                form: {\n                    name: \"\",\n                    type: \"circulation\",\n                    frequency: \"\",\n                    unit: \"m\",\n                    time: \"\",\n                    timeArray: [],\n                    Host: \"\",\n                },\n                formRules: {\n                    name: [\n                        { required: true, message: '请输入任务名称', trigger: 'blur' },\n                        { min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur' }\n                    ],\n                    frequency: [\n                        { type: \"number\", required: true, message: '请输入时间间隔' },\n                    ],\n                    timeArray: [\n                        { type: \"array\", required: true, message: '请选择执行时间' },\n                    ],\n                    time: [\n                        { required: true, message: '请选择执行时间'},\n                    ],\n                    Host: [\n                        { required: true, message: '请选择测试域名'},\n                    ],\n                    type: [\n                        { required: true, message: '请选择任务类型', trigger: 'blur' },\n                    ],\n                },\n                Host: [],\n                unit: [\n                    {value: \"m\", label: \"分\"},\n                    {value: \"h\", label: \"时\"},\n                    {value: \"d\", label: \"天\"},\n                    {value: \"w\", label: \"周\"},\n                ],\n                type: [ {value: \"circulation\", label: \"循环\"},\n                    {value: \"timing\", label: \"定时\"},],\n                pickerOptions1: {\n                    disabledDate(time) {\n                        return time.getTime() < Date.now() - 8.64e7;\n                    }\n                },\n                pickerOptions2: {\n                    disabledDate(time) {\n                        return time.getTime() < Date.now() - 8.64e7;\n                    },\n                    shortcuts: [{\n                        text: '最近一周',\n                        onClick(picker) {\n                            const end = new Date();\n                            const start = new Date();\n                            end.setTime(end.getTime() + 3600 * 1000 * 24 * 7);\n                            picker.$emit('pick', [start, end]);\n                        }\n                    }, {\n                        text: '最近一个月',\n                        onClick(picker) {\n                            const end = new Date();\n                            const start = new Date();\n                            end.setTime(end.getTime() + 3600 * 1000 * 24 * 30);\n                            picker.$emit('pick', [start, end]);\n                        }\n                    }, {\n                        text: '最近三个月',\n                        onClick(picker) {\n                            const end = new Date();\n                            const start = new Date();\n                            end.setTime(end.getTime() + 3600 * 1000 * 24 * 90);\n                            picker.$emit('pick', [start, end]);\n                        }\n                    }]\n                },\n                updateGroupFormVisible: false,\n                updateGroupForm: {\n                    firstGroup: \"\",\n                },\n                updateGroupFormRules: {\n                    firstGroup : [{ type: 'number', required: true, message: '请选择父分组', trigger: 'blur'}],\n                },\n                group: [],\n                updateGroupLoading: false,\n                update: true,\n                editFormVisible: false,//编辑界面是否显示\n                editLoading: false,\n                editFormRules: {\n                    caseName: [\n                        { required: true, message: '请输入名称', trigger: 'blur' },\n                        { min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur' }\n                    ],\n                    automationGroupLevelFirst: [\n                        { type: 'number', required: true, message: '请选择分组', trigger: 'blur'}\n                    ],\n                    description: [\n                        { required: false, message: '请输入描述', trigger: 'blur' },\n                        { max: 1024, message: '不能超过1024个字符', trigger: 'blur' }\n                    ]\n                },\n                //编辑界面数据\n                editForm: {\n                    caseName: '',\n                    automationGroupLevelFirst: '',\n                    description: ''\n                },\n\n                addFormVisible: false,//新增界面是否显示\n                addLoading: false,\n                addFormRules: {\n                    caseName: [\n                        { required: true, message: '请输入名称', trigger: 'blur' },\n                        { min: 1, max: 50, message: '长度在 1 到 50 个字符', trigger: 'blur' }\n                    ],\n                    firstGroup: [\n                        { type: 'number', required: true, message: '请选择父分组', trigger: 'blur'}\n                    ],\n                    description: [\n                        { required: false, message: '请输入版本号', trigger: 'blur' },\n                        { max: 1024, message: '不能超过1024个字符', trigger: 'blur' }\n                    ]\n                },\n                //新增界面数据\n                addForm: {\n                    caseName: '',\n                    firstGroup: '',\n                    description: ''\n                }\n            }\n        },\n        methods: {\n            // 下载用例\n            DownloadApi() {\n                $.ajax({\n                    type: \"get\",\n                    url: test+\"/api/automation/DownloadCase\",\n                    async: true,\n                    data: { project_id: this.$route.params.project_id},\n                    headers: {\n                        Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                    },\n                    timeout: 5000,\n                    success: function(data) {\n                        if (data.code === \"999999\") {\n                            window.open(test+\"/api/api/download_doc?url=\"+data.data)\n                        }\n                    },\n                })\n            },\n            TestReport(){\n                this.$router.push(\n                    {\n                        name: '测试报告', params:\n                            {\n                                project_id: this.$route.params.project_id,\n                            }\n                    });\n            },\n            getHost() {\n                let self = this;\n                $.ajax({\n                    type: \"get\",\n                    url: test+\"/api/global/host_total\",\n                    async: true,\n                    data: { project_id: this.$route.params.project_id, page: this.page,},\n                    headers: {\n                        Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                    },\n                    timeout: 5000,\n                    success: (data) => {\n                        if (data.code === '999999') {\n                            data.data.data.forEach((item) => {\n                                if (item.status) {\n                                    self.Host.push(item)\n                                }\n                            })\n                        }\n                        else {\n                            self.$message.error({\n                                message: data.msg,\n                                center: true,\n                            })\n                        }\n                    },\n                })\n            },\n            getTask(){\n                let self = this;\n                $.ajax({\n                    type: \"get\",\n                    url: test+\"/api/automation/get_time_task\",\n                    async: true,\n                    data: {\n                        project_id: self.$route.params.project_id,\n                    },\n                    headers: {\n                        Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                    },\n                    timeout: 5000,\n                    success: (data) => {\n                        if (data.code === '999999') {\n                            try {\n                                self.form.name = data.data.name;\n                                self.form.type = data.data.type;\n                                self.form.frequency = data.data.frequency;\n                                if (self.form.type === 'timing') {\n                                    self.form.unit = 'm'\n                                } else {\n                                    self.form.unit = data.data.unit;\n                                }\n                                self.form.time = data.data.startTime;\n                                self.form.timeArray = [data.data.startTime, data.data.endTime];\n                                self.form.Host = data.data.Host;\n                                self.disDel = false\n                            } catch (e){\n                                self.form.name = \"\";\n                                self.form.type = \"circulation\";\n                                self.form.frequency = \"\";\n                                self.form.unit = \"m\";\n                                self.form.time = \"\";\n                                self.form.timeArray = [];\n                                self.form.Host = \"\";\n                                self.disDel = true\n                            }\n                            self.taskVShow = true\n                        }\n                        else {\n                            self.$message.error({\n                                message: data.msg,\n                                center: true,\n                            })\n                        }\n                    },\n                    error: function () {\n                        self.editLoading = false;\n                        self.$message.error({\n                            message: \"失败\",\n                            center: true,\n                        })\n                    }\n                })\n            },\n            addTask(){\n                let self = this;\n                this.$refs.form.validate((valid) => {if (valid) {\n                    this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            console.log(self.form);\n                            self.editLoading = true;\n                            let param = {\n                                project_id: Number(self.$route.params.project_id),\n                                Host_id: Number(self.form.Host),\n                                name: self.form.name,\n                                type: self.form.type,\n                                frequency: Number(self.form.frequency),\n                                unit: self.form.unit,\n                            };\n                            if (self.form.type === 'circulation') {\n                                param['startTime'] = moment(self.form.timeArray[0]).format(\"YYYY-MM-DD HH:mm:ss\");\n                                param['endTime'] = moment(self.form.timeArray[1]).format(\"YYYY-MM-DD HH:mm:ss\")\n                            } else {\n                                param['startTime'] = moment(self.form.time).format(\"YYYY-MM-DD HH:mm:ss\");\n                                param['endTime'] = moment(self.form.time).format(\"YYYY-MM-DD HH:mm:ss\")\n                            }\n                            $.ajax({\n                                type: \"post\",\n                                url: test+\"/api/automation/add_time_task\",\n                                async: true,\n                                data: JSON.stringify(param),\n                                headers: {\n                                    \"Content-Type\": \"application/json\",\n                                    Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                                },\n                                timeout: 5000,\n                                success: (data) => {\n                                    if (data.code === '999999') {\n                                        self.editLoading = false;\n                                        self.taskVShow = false;\n                                        self.$message({\n                                            message: '添加成功',\n                                            center: true,\n                                            type: \"success\",\n                                        })\n                                    }\n                                    else {\n                                        self.editLoading = false;\n                                        self.$message.error({\n                                            message: data.msg,\n                                            center: true,\n                                        })\n                                    }\n                                },\n                                error: function () {\n                                    self.editLoading = false;\n                                    self.$message.error({\n                                        message: \"失败\",\n                                        center: true,\n                                    })\n                                }\n                            })\n                        }\n                    )}\n                })\n            },\n            delTask(){\n                let self = this;\n                self.delLoading = true;\n                $.ajax({\n                    type: \"post\",\n                    url: test+\"/api/automation/del_task\",\n                    async: true,\n                    data: JSON.stringify({\n                        project_id: Number(self.$route.params.project_id),\n                    }),\n                    headers: {\n                        Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                    },\n                    timeout: 5000,\n                    success: (data) => {\n                        if (data.code === '999999') {\n                            self.delLoading = false;\n                            self.taskVShow = false;\n                            self.$message({\n                                message: \"删除成功\",\n                                center: true,\n                                type: \"success\"\n                            })\n                        }\n                        else {\n                            self.delLoading = false;\n                            self.$message.error({\n                                message: data.msg,\n                                center: true,\n                            })\n                        }\n                    },\n                    error: function () {\n                        self.delLoading = false;\n                        self.$message.error({\n                            message: \"失败\",\n                            center: true,\n                        })\n                    }\n                })\n            },\n            // 获取用例列表\n            getCaseList() {\n                this.listLoading = true;\n                let self = this;\n                let param = { project_id: this.$route.params.project_id, page: self.page, name: self.filters.name};\n                if (this.$route.params.firstGroup) {\n                    param['first_group_id'] = this.$route.params.firstGroup;\n                    if (this.$route.params.secondGroup) {\n                        param['second_group_id'] = this.$route.params.secondGroup\n                    }\n                }\n\n                $.ajax({\n                    type: \"get\",\n                    url: test+\"/api/automation/case_list\",\n                    async: true,\n                    data: param,\n                    headers: {\n                        Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                    },\n                    timeout: 5000,\n                    success: function(data) {\n                        self.listLoading = false;\n                        if (data.code === '999999') {\n                            self.total = data.data.total;\n                            self.Case = data.data.data\n                        }\n                        else {\n                            self.$message.error({\n                                message: data.msg,\n                                center: true,\n                            })\n                        }\n                    },\n                })\n            },\n            // 修改用例所属分组\n            updateGroupSubmit() {\n                let ids = this.sels.map(item => item.id);\n                let self = this;\n                this.$confirm('确认修改所属分组吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    self.updateGroupLoading = true;\n                    //NProgress.start();\n                    let params = JSON.stringify({\n                        project_id: Number(this.$route.params.project_id),\n                        automationGroupLevelFirst_id: self.updateGroupForm.firstGroup,\n                        ids:ids\n                    });\n                    $.ajax({\n                        type: \"post\",\n                        url: test+\"/api/automation/update_case_group\",\n                        async: true,\n                        data: params,\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                        },\n                        timeout: 5000,\n                        success: function(data) {\n                            self.updateGroupLoading = false;\n                            if (data.code === '999999') {\n                                self.$message({\n                                    message: '修改成功',\n                                    center: true,\n                                    type: 'success'\n                                });\n                                self.$router.push({ name: '分组用例列表', params: { project_id: self.$route.params.project_id, firstGroup: self.updateGroupForm.firstGroup}});\n                            }\n                            else {\n                                self.$message.error({\n                                    message: data.msg,\n                                    center: true,\n                                })\n                            }\n                            self.updateGroupFormVisible = false;\n                            self.getCaseList();\n                        },\n                    })\n                }).catch(() => {\n\n                });\n            },\n            // 获取用例分组\n            getCaseGroup() {\n                let self = this;\n                $.ajax({\n                    type: \"get\",\n                    url: test+\"/api/automation/group\",\n                    async: true,\n                    data: { project_id: this.$route.params.project_id},\n                    headers: {\n                        Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                    },\n                    timeout: 5000,\n                    success: function(data) {\n                        if (data.code === '999999') {\n                            self.group = data.data;\n                            self.updateGroupForm.firstGroup = self.group[0].id;\n                            self.addForm.firstGroup = self.group[0].id\n                        }\n                        else {\n                            self.$message.error({\n                                message: data.msg,\n                                center: true,\n                            })\n                        }\n                    },\n                })\n            },\n            changeGroup() {\n                this.getCaseGroup();\n                this.updateGroupFormVisible = true\n\n            },\n            //删除\n            handleDel: function (index, row) {\n                this.$confirm('确认删除该记录吗?', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    this.listLoading = true;\n                    //NProgress.start();\n                    let self = this;\n                    $.ajax({\n                        type: \"post\",\n                        url: test+\"/api/automation/del_case\",\n                        async: true,\n                        data: JSON.stringify({\n                                project_id: Number(this.$route.params.project_id),\n                                ids: [row.id] }),\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                        },\n                        timeout: 5000,\n                        success: function(data) {\n                            if (data.code === '999999') {\n                                self.$message({\n                                    message: '删除成功',\n                                    center: true,\n                                    type: 'success'\n                                })\n                            } else {\n                                self.$message.error({\n                                    message: data.msg,\n                                    center: true,\n                                })\n                            }\n                            self.getCaseList();\n                        },\n                    })\n\n                }).catch(() => {\n                });\n            },\n            handleCurrentChange(val) {\n                this.page = val;\n                this.getCaseList()\n            },\n            selsChange: function (sels) {\n                if (sels.length>0) {\n                    this.sels = sels;\n                    this.update = false\n                } else {\n                    this.update = true\n                }\n            },\n            //批量删除\n            batchRemove: function () {\n                let ids = this.sels.map(item => item.id);\n                let self = this;\n                this.$confirm('确认删除选中记录吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    self.listLoading = true;\n                    //NProgress.start();\n                    $.ajax({\n                        type: \"post\",\n                        url: test+\"/api/automation/del_case\",\n                        async: true,\n                        data:JSON.stringify({ project_id: Number(this.$route.params.project_id), ids: ids}),\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                        },\n                        timeout: 5000,\n                        success: function(data) {\n                            self.listLoading = false;\n                            if (data.code === '999999') {\n                                self.$message({\n                                    message: '删除成功',\n                                    center: true,\n                                    type: 'success'\n                                })\n                            }\n                            else {\n                                self.$message.error({\n                                    message: data.msg,\n                                    center: true,\n                                })\n                            }\n                            self.getCaseList();\n                        },\n                    })\n                }).catch(() => {\n\n                });\n            },\n            //显示编辑界面\n            handleEdit: function (index, row) {\n                this.getCaseGroup();\n                this.editFormVisible = true;\n                this.editForm = Object.assign({}, row);\n            },\n            //显示新增界面\n            handleAdd: function () {\n                this.getCaseGroup();\n                this.addFormVisible = true;\n            },\n            // 修改用例\n            editSubmit: function () {\n                let self = this;\n                this.$refs.editForm.validate((valid) => {\n                    if (valid) {\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.editLoading = true;\n                            //NProgress.start();\n                            let param = JSON.stringify({\n                                project_id: Number(this.$route.params.project_id),\n                                id: Number(self.editForm.id),\n                                caseName: self.editForm.caseName,\n                                automationGroupLevelFirst_id: Number(this.editForm.automationGroupLevelFirst),\n                                description: self.editForm.description });\n                            $.ajax({\n                                type: \"post\",\n                                url: test+\"/api/automation/update_case\",\n                                async: true,\n                                data: param,\n                                headers: {\n                                    Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                                },\n                                timeout: 5000,\n                                success: function(data) {\n                                    self.editLoading = false;\n                                    if (data.code === '999999') {\n                                        self.$message({\n                                            message: '修改成功',\n                                            center: true,\n                                            type: 'success'\n                                        });\n                                        self.$refs['editForm'].resetFields();\n                                        self.editFormVisible = false;\n                                        self.getCaseList()\n                                    } else if (data.code === '999997'){\n                                        self.$message.error({\n                                            message: data.msg,\n                                            center: true,\n                                        })\n                                    } else {\n                                        self.$message.error({\n                                            message: data.msg,\n                                            center: true,\n                                        })\n                                    }\n                                },\n                            })\n                        });\n                    }\n                });\n            },\n            //新增用例\n            addSubmit: function () {\n                this.$refs.addForm.validate((valid) => {\n                    if (valid) {\n                        let self = this;\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.addLoading = true;\n                            //NProgress.start();\n                            let param = JSON.stringify({\n                                project_id: Number(this.$route.params.project_id),\n                                automationGroupLevelFirst_id: this.addForm.firstGroup,\n                                caseName: self.addForm.caseName,\n                                description: self.addForm.description });\n                            $.ajax({\n                                type: \"post\",\n                                url: test+\"/api/automation/add_case\",\n                                async: true,\n                                data: param,\n                                headers: {\n                                    Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                                },\n                                timeout: 5000,\n                                success: function(data) {\n                                    self.addLoading = false;\n                                    if (data.code === '999999') {\n                                        self.$message({\n                                            message: '添加成功',\n                                            center: true,\n                                            type: 'success'\n                                        });\n                                        self.$refs['addForm'].resetFields();\n                                        self.addFormVisible = false;\n                                        self.getCaseList()\n                                    } else if (data.code === '999997'){\n                                        self.$message.error({\n                                            message: data.msg,\n                                            center: true,\n                                        })\n                                    } else {\n                                        self.$message.error({\n                                            message: data.msg,\n                                            center: true,\n                                        });\n                                        self.$refs['addForm'].resetFields();\n                                        self.addFormVisible = false;\n                                        self.getCaseList()\n                                    }\n                                },\n                            })\n                        });\n                    }\n                });\n            },\n        },\n        mounted() {\n            this.getCaseList();\n            this.getHost();\n\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .api-title {\n        padding: 15px;\n        margin: 0px;\n        text-align: center;\n        border-radius:5px;\n        font-size: 15px;\n        color: aliceblue;\n        background-color: rgb(32, 160, 255);\n        font-family: PingFang SC;\n    }\n    .group .editGroup {\n        float:right;\n    }\n    .row-title {\n        margin: 35px;\n    }\n    .addGroup {\n        margin-top: 0px;\n        margin-bottom: 10px;\n        border-radius: 25px;\n    }\n    .api-view-a {\n        margin-left: 15px;\n        margin-right: 15px;\n        display: block;\n    }\n    .api-view-b {\n        margin-left: 15px;\n        margin-right: 15px;\n        display: none;\n    }\n</style>\n\n\n// WEBPACK FOOTER //\n// src/views/project/automation/CaseList.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('el-col',{staticStyle:{\"height\":\"46px\"},attrs:{\"span\":24}},[_c('el-form',{attrs:{\"inline\":true,\"model\":_vm.filters},nativeOn:{\"submit\":function($event){$event.preventDefault();}}},[_c('el-form-item',[_c('el-input',{attrs:{\"placeholder\":\"名称\"},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.getCaseList($event)}},model:{value:(_vm.filters.name),callback:function ($$v) {_vm.$set(_vm.filters, \"name\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"filters.name\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.getCaseList}},[_vm._v(\"查询\")])],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.handleAdd}},[_vm._v(\"新增用例\")])],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"disabled\":_vm.update},on:{\"click\":_vm.changeGroup}},[_vm._v(\"修改分组\")])],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},nativeOn:{\"click\":function($event){return _vm.DownloadApi($event)}}},[_vm._v(\"下载用例\")])],1),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},nativeOn:{\"click\":function($event){return _vm.getTask($event)}}},[_c('div',[_vm._v(\"设置定时任务\")])]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},nativeOn:{\"click\":function($event){return _vm.TestReport($event)}}},[_c('div',[_vm._v(\"查看报告\")])])],1)],1),_vm._v(\" \"),_c('el-dialog',{staticStyle:{\"width\":\"70%\",\"left\":\"15%\"},attrs:{\"title\":\"定时任务\",\"visible\":_vm.taskVShow,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.taskVShow=$event}}},[_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.form,\"label-width\":\"100px\",\"rules\":_vm.formRules}},[_c('el-form-item',{attrs:{\"label\":\"任务名称：\",\"prop\":\"name\"}},[_c('el-input',{attrs:{\"placeholder\":\"请输入任务名称\"},model:{value:(_vm.form.name),callback:function ($$v) {_vm.$set(_vm.form, \"name\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"form.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"类型：\",\"prop\":\"type\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.form.type),callback:function ($$v) {_vm.$set(_vm.form, \"type\", $$v)},expression:\"form.type\"}},_vm._l((_vm.type),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1),_vm._v(\" \"),(_vm.form.type === 'circulation')?_c('el-form-item',{attrs:{\"label\":\"间隔：\",\"prop\":\"frequency\"}},[_c('el-row',{attrs:{\"span\":24}},[_c('el-col',{attrs:{\"span\":14}},[_c('el-input',{attrs:{\"placeholder\":\"间隔\"},model:{value:(_vm.form.frequency),callback:function ($$v) {_vm.$set(_vm.form, \"frequency\", _vm._n($$v))},expression:\"form.frequency\"}})],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":5}},[_c('el-select',{attrs:{\"placeholder\":\"请选择\"},model:{value:(_vm.form.unit),callback:function ($$v) {_vm.$set(_vm.form, \"unit\", $$v)},expression:\"form.unit\"}},_vm._l((_vm.unit),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}),1)],1)],1)],1):_vm._e(),_vm._v(\" \"),(_vm.form.type === 'circulation')?_c('el-form-item',{attrs:{\"label\":\"执行时间：\",\"prop\":\"timeArray\"}},[_c('el-date-picker',{attrs:{\"type\":\"datetimerange\",\"picker-options\":_vm.pickerOptions2,\"range-separator\":\"   至   \",\"start-placeholder\":\"开始日期\",\"end-placeholder\":\"结束日期\",\"align\":\"right\"},model:{value:(_vm.form.timeArray),callback:function ($$v) {_vm.$set(_vm.form, \"timeArray\", $$v)},expression:\"form.timeArray\"}})],1):_vm._e(),_vm._v(\" \"),(_vm.form.type === 'timing')?_c('el-form-item',{attrs:{\"label\":\"执行时间：\",\"prop\":\"time\"}},[_c('el-date-picker',{attrs:{\"type\":\"datetime\",\"placeholder\":\"选择日期时间\",\"picker-options\":_vm.pickerOptions1},model:{value:(_vm.form.time),callback:function ($$v) {_vm.$set(_vm.form, \"time\", $$v)},expression:\"form.time\"}})],1):_vm._e(),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"HOST：\",\"prop\":\"Host\"}},[_c('el-select',{attrs:{\"placeholder\":\"测试环境\"},model:{value:(_vm.form.Host),callback:function ($$v) {_vm.$set(_vm.form, \"Host\", $$v)},expression:\"form.Host\"}},_vm._l((_vm.Host),function(item,index){return _c('el-option',{key:index+'',attrs:{\"label\":item.name,\"value\":item.id}})}),1)],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.editLoading},nativeOn:{\"click\":function($event){return _vm.addTask($event)}}},[_vm._v(\"创建\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"danger\",\"loading\":_vm.delLoading,\"disabled\":_vm.disDel},nativeOn:{\"click\":function($event){return _vm.delTask($event)}}},[_vm._v(\"删除\")])],1)],1)],1),_vm._v(\" \"),_c('el-dialog',{staticStyle:{\"width\":\"65%\",\"left\":\"17.5%\"},attrs:{\"title\":\"编辑\",\"visible\":_vm.editFormVisible,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.editFormVisible=$event}}},[_c('el-form',{ref:\"editForm\",attrs:{\"model\":_vm.editForm,\"rules\":_vm.editFormRules,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"label\":\"名称\",\"prop\":\"caseName\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.editForm.caseName),callback:function ($$v) {_vm.$set(_vm.editForm, \"caseName\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"editForm.caseName\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"接口分组:\",\"label-width\":\"83px\",\"prop\":\"automationGroupLevelFirst\"}},[_c('el-select',{attrs:{\"placeholder\":\"分组\"},model:{value:(_vm.editForm.automationGroupLevelFirst),callback:function ($$v) {_vm.$set(_vm.editForm, \"automationGroupLevelFirst\", $$v)},expression:\"editForm.automationGroupLevelFirst\"}},_vm._l((_vm.group),function(item,index){return _c('el-option',{key:index+'',attrs:{\"label\":item.name,\"value\":item.id}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"描述\",\"prop\":\"description\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":4},model:{value:(_vm.editForm.description),callback:function ($$v) {_vm.$set(_vm.editForm, \"description\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"editForm.description\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){_vm.editFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.editLoading},nativeOn:{\"click\":function($event){return _vm.editSubmit($event)}}},[_vm._v(\"提交\")])],1)],1),_vm._v(\" \"),_c('el-dialog',{staticStyle:{\"width\":\"65%\",\"left\":\"17.5%\"},attrs:{\"title\":\"新增\",\"visible\":_vm.addFormVisible,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.addFormVisible=$event}}},[_c('el-form',{ref:\"addForm\",attrs:{\"model\":_vm.addForm,\"label-width\":\"80px\",\"rules\":_vm.addFormRules}},[_c('el-form-item',{attrs:{\"label\":\"名称\",\"prop\":\"caseName\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.addForm.caseName),callback:function ($$v) {_vm.$set(_vm.addForm, \"caseName\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"addForm.caseName\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"接口分组:\",\"label-width\":\"83px\",\"prop\":\"firstGroup\"}},[_c('el-select',{attrs:{\"placeholder\":\"分组\"},model:{value:(_vm.addForm.firstGroup),callback:function ($$v) {_vm.$set(_vm.addForm, \"firstGroup\", $$v)},expression:\"addForm.firstGroup\"}},_vm._l((_vm.group),function(item,index){return _c('el-option',{key:index+'',attrs:{\"label\":item.name,\"value\":item.id}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"描述\",\"prop\":\"description\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"rows\":4},model:{value:(_vm.addForm.description),callback:function ($$v) {_vm.$set(_vm.addForm, \"description\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"addForm.description\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){_vm.addFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.addLoading},nativeOn:{\"click\":function($event){return _vm.addSubmit($event)}}},[_vm._v(\"提交\")])],1)],1),_vm._v(\" \"),_c('el-dialog',{staticStyle:{\"width\":\"60%\",\"left\":\"20%\"},attrs:{\"title\":\"修改所属分组\",\"visible\":_vm.updateGroupFormVisible,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.updateGroupFormVisible=$event}}},[_c('el-form',{ref:\"updateGroupForm\",attrs:{\"model\":_vm.updateGroupForm,\"label-width\":\"80px\",\"rules\":_vm.updateGroupFormRules}},[_c('el-form-item',{attrs:{\"label\":\"分组\",\"prop\":\"firstGroup\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择分组\"},model:{value:(_vm.updateGroupForm.firstGroup),callback:function ($$v) {_vm.$set(_vm.updateGroupForm, \"firstGroup\", $$v)},expression:\"updateGroupForm.firstGroup\"}},_vm._l((_vm.group),function(item,index){return _c('el-option',{key:index+'',attrs:{\"label\":item.name,\"value\":item.id}})}),1)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){_vm.updateGroupFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.updateGroupLoading},nativeOn:{\"click\":function($event){return _vm.updateGroupSubmit($event)}}},[_vm._v(\"提交\")])],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.listLoading),expression:\"listLoading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.Case,\"highlight-current-row\":\"\"},on:{\"selection-change\":_vm.selsChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"min-width\":\"5%\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"caseName\",\"label\":\"用例名称\",\"min-width\":\"20%\",\"sortable\":\"\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-icon',{attrs:{\"name\":\"caseName\"}}),_vm._v(\" \"),_c('router-link',{staticStyle:{\"text-decoration\":\"none\"},attrs:{\"to\":{ name: '用例接口列表', params: {case_id: scope.row.id}}}},[_vm._v(_vm._s(scope.row.caseName))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"description\",\"label\":\"描述\",\"min-width\":\"35%\",\"sortable\":\"\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"createUser\",\"label\":\"创建人\",\"min-width\":\"10%\",\"sortable\":\"\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"updateTime\",\"label\":\"更新日期\",\"min-width\":\"15%\",\"sortable\":\"\",\"show-overflow-tooltip\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"min-width\":\"15%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.handleDel(scope.$index, scope.row)}}},[_vm._v(\"删除\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"info\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.handleEdit(scope.$index, scope.row)}}},[_vm._v(\"修改\")])]}}])})],1),_vm._v(\" \"),_c('el-col',{staticClass:\"toolbar\",attrs:{\"span\":24}},[_c('el-button',{attrs:{\"type\":\"danger\",\"disabled\":this.sels.length===0},on:{\"click\":_vm.batchRemove}},[_vm._v(\"批量删除\")]),_vm._v(\" \"),_c('el-pagination',{staticStyle:{\"float\":\"right\"},attrs:{\"layout\":\"prev, pager, next\",\"page-size\":20,\"page-count\":_vm.total},on:{\"current-change\":_vm.handleCurrentChange}})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-679223b6\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/project/automation/CaseList.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-679223b6\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./CaseList.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CaseList.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CaseList.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-679223b6\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./CaseList.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-679223b6\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/project/automation/CaseList.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}