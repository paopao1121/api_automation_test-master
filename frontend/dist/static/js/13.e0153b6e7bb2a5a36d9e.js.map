{"version":3,"sources":["webpack:///./src/views/project/automation/CaseApiList.vue?574d","webpack:///./src/views/project/automation/CaseApiList.vue","webpack:///src/views/project/automation/CaseApiList.vue"],"names":["automation_CaseApiList","render","_vm","this","_h","$createElement","_c","_self","staticStyle","text-decoration","color","attrs","to","name","params","project_id","$route","staticClass","margin-right","_v","type","nativeOn","click","$event","addOldApi","on","TestAllApi","float","placeholder","model","value","callback","$$v","url","expression","_l","item","index","key","label","id","title","visible","searchApiListVisible","close-on-click-modal","update:visible","gutter","span","height","line-height","overflow","overflow-x","border","active-text-color","unique-opened","select","handleSelect","getApiList","slot","_s","directives","rawName","width","data","searchApiList","highlight-current-row","show-header","max-height","selection-change","selsChange","prop","min-width","sortable","layout","page-size","page-count","total","current-change","handleCurrentChangeApi","loading","searchApi","addOldApiSubmit","ApiList","show-overflow-tooltip","scopedSlots","_u","fn","scope","api_id","row","requestType","font-size","apiAddress","result","testStatus","cursor","resultShow","size","Test","$index","handleDel","handleCurrentChange","TestResult","statusCode","padding-bottom","testTime","margin-top","parameter","examineType","padding","word-break","text-align","httpStatus","responseData","staticRenderFns","__vue_styles__","ssrContext","__webpack_require__","Component","normalizeComponent","CaseApiList","__webpack_exports__","project","case","listLoading","searchName","Host","groupData","apiListLoading","apiTotal","pageApi","sels","ApiListLen","ApiListIndex","activeIndex","methods","keyPath","console","log","getCaseApiList","self","__WEBPACK_IMPORTED_MODULE_2_jquery___default","a","ajax","__WEBPACK_IMPORTED_MODULE_1__api_api__","async","page","case_id","headers","Authorization","JSON","parse","sessionStorage","getItem","timeout","success","code","forEach","push","$message","error","message","msg","center","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default","Number","host_id","Content-Type","ApiTotal","length","i","TestAll","_this","$confirm","then","ids","catch","getApiGroup","_list","param","getResult","_id","eval","header","replace","_this2","map","api_ids","val","getHost","status","mounted"],"mappings":"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","file":"static/js/13.e0153b6e7bb2a5a36d9e.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('router-link',{staticStyle:{\"text-decoration\":\"none\",\"color\":\"aliceblue\"},attrs:{\"to\":{ name: '用例列表', params: {project_id: this.$route.params.project_id}}}},[_c('el-button',{staticClass:\"return-list\"},[_c('i',{staticClass:\"el-icon-d-arrow-left\",staticStyle:{\"margin-right\":\"5px\"}}),_vm._v(\"用例列表\")])],1),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},nativeOn:{\"click\":function($event){return _vm.addOldApi($event)}}},[_c('i',{staticClass:\"el-icon-plus\",staticStyle:{\"margin-right\":\"5px\"}}),_vm._v(\"已有接口\")]),_vm._v(\" \"),_c('router-link',{staticStyle:{\"text-decoration\":\"none\",\"color\":\"#000000\"},attrs:{\"to\":{ name: '添加新接口'}}},[_c('el-button',{attrs:{\"type\":\"primary\"}},[_c('i',{staticClass:\"el-icon-plus\",staticStyle:{\"margin-right\":\"5px\"}}),_vm._v(\"新建接口\")])],1),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.TestAllApi()}}},[_c('div',[_vm._v(\"测试全部\")])]),_vm._v(\" \"),_c('el-select',{staticStyle:{\"float\":\"right\"},attrs:{\"placeholder\":\"测试环境\"},model:{value:(_vm.url),callback:function ($$v) {_vm.url=$$v},expression:\"url\"}},_vm._l((_vm.Host),function(item,index){return _c('el-option',{key:index+'',attrs:{\"label\":item.name,\"value\":item.id}})}),1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"选择创建的API\",\"visible\":_vm.searchApiListVisible,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.searchApiListVisible=$event}}},[_c('el-row',{attrs:{\"gutter\":10}},[_c('el-col',{attrs:{\"span\":6}},[_c('div',{staticStyle:{\"height\":\"400px\",\"line-height\":\"100px\",\"overflow\":\"auto\",\"overflow-x\":\"hidden\",\"border\":\"1px solid #e6e6e6\"}},[_c('el-menu',{staticClass:\"el-menu-vertical-demo\",attrs:{\"active-text-color\":\"rgb(32, 160, 255)\",\"unique-opened\":true},on:{\"select\":_vm.handleSelect}},[_c('el-menu-item',{attrs:{\"index\":\"-1\"},nativeOn:{\"click\":function($event){return _vm.getApiList()}}},[_c('i',{staticClass:\"el-icon-menu\"}),_vm._v(\"所有接口\")]),_vm._v(\" \"),_vm._l((_vm.groupData),function(item,index){return [_c('el-menu-item',{key:item.id,staticClass:\"group\",attrs:{\"index\":index+''},nativeOn:{\"click\":function($event){return _vm.getApiList(item.id)}}},[_c('template',{slot:\"title\"},[_vm._v(_vm._s(item.name)+\"\\n                                \")])],2)]})],2)],1)]),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":18}},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.apiListLoading),expression:\"apiListLoading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.searchApiList,\"highlight-current-row\":\"\",\"show-header\":false,\"max-height\":\"400\"},on:{\"selection-change\":_vm.selsChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"width\":\"55\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"名称\",\"min-width\":\"25%\",\"sortable\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"requestType\",\"label\":\"HTTP方式\",\"min-width\":\"15%\",\"sortable\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"apiAddress\",\"label\":\"地址\",\"min-width\":\"60%\",\"sortable\":\"\"}})],1)],1)],1),_vm._v(\" \"),_c('el-col',{staticClass:\"toolbar\",attrs:{\"span\":24}},[_c('el-pagination',{staticStyle:{\"float\":\"right\"},attrs:{\"layout\":\"prev, pager, next\",\"page-size\":20,\"page-count\":_vm.total},on:{\"current-change\":_vm.handleCurrentChangeApi}})],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){_vm.searchApiListVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.searchApi},nativeOn:{\"click\":function($event){return _vm.addOldApiSubmit($event)}}},[_vm._v(\"提交\")])],1)],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.listLoading),expression:\"listLoading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.ApiList,\"highlight-current-row\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"index\",\"width\":\"55\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"接口名称\",\"min-width\":\"20%\",\"sortable\":\"\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-icon',{attrs:{\"name\":\"name\"}}),_vm._v(\" \"),_c('router-link',{staticStyle:{\"text-decoration\":\"none\",\"color\":\"#000000\"},attrs:{\"to\":{ name: '修改接口', params: {api_id: scope.row.id}}}},[_vm._v(_vm._s(scope.row.name)+\"\\n                \")])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"address\",\"label\":\"接口地址\",\"min-width\":\"50%\",\"sortable\":\"\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{staticClass:\"HttpStatus\"},[_vm._v(_vm._s(scope.row.requestType))]),_c('span',{staticStyle:{\"font-size\":\"16px\"}},[_vm._v(_vm._s(scope.row.apiAddress))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"result\",\"label\":\"测试结果\",\"min-width\":\"10%\",\"sortable\":\"\",\"show-overflow-tooltip\":\"\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!scope.row.result&&!scope.row.testStatus),expression:\"!scope.row.result&&!scope.row.testStatus\"}]},[_vm._v(\"尚无测试结果\")]),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(scope.row.testStatus),expression:\"scope.row.testStatus\"}]},[_vm._v(\"测试中...\")]),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(scope.row.result==='success'&&!scope.row.testStatus),expression:\"scope.row.result==='success'&&!scope.row.testStatus\"}],staticStyle:{\"color\":\"#11b95c\",\"cursor\":\"pointer\"},on:{\"click\":function($event){return _vm.resultShow(scope.row)}}},[_vm._v(\"成功,查看详情\")]),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(scope.row.result==='fail'&&!scope.row.testStatus),expression:\"scope.row.result==='fail'&&!scope.row.testStatus\"}],staticStyle:{\"color\":\"#cc0000\",\"cursor\":\"pointer\"},on:{\"click\":function($event){return _vm.resultShow(scope.row)}}},[_vm._v(\"失败,查看详情\")]),_vm._v(\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(scope.row.result==='timeout'&&!scope.row.testStatus),expression:\"scope.row.result==='timeout'&&!scope.row.testStatus\"}],staticStyle:{\"color\":\"#cc0000\",\"cursor\":\"pointer\"},on:{\"click\":function($event){return _vm.resultShow(scope.row)}}},[_vm._v(\"请求超时\")])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"min-width\":\"20%\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.Test(scope.$index, scope.row)}}},[_vm._v(\"测试\")]),_vm._v(\" \"),_c('router-link',{staticStyle:{\"text-decoration\":\"none\",\"color\":\"#000000\"},attrs:{\"to\":{ name: '修改接口', params: {api_id: scope.row.id}}}},[_c('el-button',{attrs:{\"size\":\"small\"}},[_vm._v(\"修改\")])],1),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"small\"},on:{\"click\":function($event){return _vm.handleDel(scope.$index, scope.row)}}},[_vm._v(\"删除\")])]}}])})],1),_vm._v(\" \"),_c('el-col',{staticClass:\"toolbar\",attrs:{\"span\":24}},[_c('el-pagination',{staticStyle:{\"float\":\"right\"},attrs:{\"layout\":\"prev, pager, next\",\"page-size\":20,\"page-count\":_vm.total},on:{\"current-change\":_vm.handleCurrentChange}})],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"测试结果\",\"visible\":_vm.TestResult,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.TestResult=$event}}},[_c('div',{staticStyle:{\"height\":\"700px\",\"overflow\":\"auto\",\"overflow-x\":\"hidden\",\"border\":\"1px solid #e6e6e6\"}},[_c('div',{staticClass:\"resultStyle\",staticStyle:{\"font-size\":\"25px\"}},[_vm._v(_vm._s(_vm.result.name))]),_vm._v(\" \"),_c('div',{staticClass:\"lin\"}),_vm._v(\" \"),_c('div',{staticClass:\"resultStyle\"},[_vm._v(\"请求地址:  \"+_vm._s(_vm.result.url))]),_vm._v(\" \"),_c('div',{staticClass:\"resultStyle\"},[_vm._v(\"请求方式:  \"+_vm._s(_vm.result.requestType))]),_vm._v(\" \"),_c('div',{staticClass:\"resultStyle\"},[_vm._v(\"状态码:  \"+_vm._s(_vm.result.statusCode))]),_vm._v(\" \"),_c('div',{staticClass:\"resultStyle\",staticStyle:{\"padding-bottom\":\"10px\"}},[_vm._v(\"请求时间:  \"+_vm._s(_vm.result.testTime))]),_vm._v(\" \"),_c('div',{staticClass:\"lin\"}),_vm._v(\" \"),_c('div',{staticClass:\"resultStyle\",staticStyle:{\"font-size\":\"25px\"}},[_vm._v(\"请求头部\")]),_vm._v(\" \"),_vm._l((_vm.result.header),function(item,value){return _c('div',{staticClass:\"resultStyle\"},[_vm._v(_vm._s(value)+\":  \"+_vm._s(item))])}),_vm._v(\" \"),_c('div',{staticClass:\"lin\",staticStyle:{\"margin-top\":\"10px\"}}),_vm._v(\" \"),_c('div',{staticClass:\"resultStyle\",staticStyle:{\"font-size\":\"25px\"}},[_vm._v(\"请求参数\")]),_vm._v(\" \"),_c('div',{staticClass:\"resultStyle\",staticStyle:{\"padding-bottom\":\"10px\"}},[_vm._v(_vm._s(_vm.result.parameter))]),_vm._v(\" \"),_c('div',{staticClass:\"lin\"}),_vm._v(\" \"),_c('div',{staticClass:\"resultStyle\",staticStyle:{\"font-size\":\"25px\"}},[_vm._v(\"返回结果\")]),_vm._v(\" \"),_c('div',{staticClass:\"resultStyle\"},[_vm._v(\"HTTP状态码:  \"+_vm._s(_vm.result.statusCode))]),_vm._v(\" \"),_c('div',{staticClass:\"resultStyle\"},[_vm._v(\"匹配规则:  \"+_vm._s(_vm.result.examineType))]),_vm._v(\" \"),_c('div',{staticClass:\"resultStyle\"},[_vm._v(\"规则内容\")]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.result.data),expression:\"result.data\"}],staticClass:\"resultStyle\",staticStyle:{\"overflow\":\"auto\",\"overflow-x\":\"hidden\",\"border\":\"1px solid #e6e6e6\",\"padding\":\"10px\",\"width\":\"90%\",\"word-break\":\"break-all\",\"line-height\":\"25px\"}},[_c('pre',{directives:[{name:\"highlightA\",rawName:\"v-highlightA\"}]},[_c('code',[_vm._v(_vm._s(_vm.result.data))])])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.result.data),expression:\"!result.data\"}],staticClass:\"resultStyle\",staticStyle:{\"overflow\":\"auto\",\"overflow-x\":\"hidden\",\"border\":\"1px solid #e6e6e6\",\"padding\":\"10px\",\"width\":\"90%\",\"word-break\":\"break-all\",\"line-height\":\"25px\",\"text-align\":\"center\"}},[_vm._v(\"无校验规则\")]),_vm._v(\" \"),_c('div',{staticClass:\"resultStyle\",staticStyle:{\"font-size\":\"25px\"}},[_vm._v(\"实际结果\")]),_vm._v(\" \"),_c('div',{staticClass:\"resultStyle\"},[_vm._v(\"HTTP状态码:  \"+_vm._s(_vm.result.httpStatus))]),_vm._v(\" \"),_c('div',{staticClass:\"resultStyle\"},[_vm._v(\"实际返回内容\")]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.result.responseData),expression:\"result.responseData\"}],staticClass:\"resultStyle\",staticStyle:{\"overflow\":\"auto\",\"overflow-x\":\"hidden\",\"border\":\"1px solid #e6e6e6\",\"padding\":\"10px\",\"width\":\"90%\",\"word-break\":\"break-all\",\"line-height\":\"25px\"}},[_c('pre',{directives:[{name:\"highlightA\",rawName:\"v-highlightA\"}]},[_c('code',[_vm._v(_vm._s(_vm.result.responseData))])])]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.result.responseData),expression:\"!result.responseData\"}],staticClass:\"resultStyle\",staticStyle:{\"overflow\":\"auto\",\"overflow-x\":\"hidden\",\"border\":\"1px solid #e6e6e6\",\"padding\":\"10px\",\"width\":\"90%\",\"word-break\":\"break-all\",\"line-height\":\"25px\",\"text-align\":\"center\"}},[_vm._v(\"无返回内容\")])],2)])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-50a5f720\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/project/automation/CaseApiList.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-50a5f720\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./CaseApiList.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CaseApiList.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./CaseApiList.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-50a5f720\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./CaseApiList.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-50a5f720\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/project/automation/CaseApiList.vue\n// module id = null\n// module chunks = ","<template>\n    <section>\n        <router-link :to=\"{ name: '用例列表', params: {project_id: this.$route.params.project_id}}\" style='text-decoration: none;color: aliceblue;'>\n            <el-button class=\"return-list\"><i class=\"el-icon-d-arrow-left\" style=\"margin-right: 5px\"></i>用例列表</el-button>\n        </router-link>\n        <el-button type=\"primary\" @click.native=\"addOldApi\"><i class=\"el-icon-plus\" style=\"margin-right: 5px\"></i>已有接口</el-button>\n        <router-link :to=\"{ name: '添加新接口'}\" style='text-decoration: none;color: #000000;'>\n            <el-button type=\"primary\"><i class=\"el-icon-plus\" style=\"margin-right: 5px\"></i>新建接口</el-button>\n        </router-link>\n        <el-button type=\"primary\" @click=\"TestAllApi()\"><div>测试全部</div></el-button>\n        <el-select v-model=\"url\"  placeholder=\"测试环境\" style=\"float: right\">\n            <el-option v-for=\"(item,index) in Host\" :key=\"index+''\" :label=\"item.name\" :value=\"item.id\"></el-option>\n        </el-select>\n        <el-dialog title=\"选择创建的API\" :visible.sync=\"searchApiListVisible\" :close-on-click-modal=\"false\" >\n            <el-row :gutter=\"10\">\n                <el-col :span=\"6\">\n                    <div style=\"height:400px;line-height:100px;overflow:auto;overflow-x:hidden;border: 1px solid #e6e6e6\">\n                        <el-menu class=\"el-menu-vertical-demo\"\n                                 active-text-color=\"rgb(32, 160, 255)\" :unique-opened=\"true\"  @select=\"handleSelect\">\n                            <el-menu-item index=\"-1\" @click.native=\"getApiList()\"><i class=\"el-icon-menu\"></i>所有接口</el-menu-item>\n                            <template v-for=\"(item,index) in groupData\">\n                                <el-menu-item :index=\"index+''\" :key=\"item.id\" @click.native=\"getApiList(item.id)\" class=\"group\">\n                                    <template slot=\"title\">{{item.name}}\n                                    </template>\n                                </el-menu-item>\n                            </template>\n                        </el-menu>\n                    </div>\n                </el-col>\n                <el-col :span=\"18\">\n                    <el-table :data=\"searchApiList\" highlight-current-row v-loading=\"apiListLoading\"\n                              style=\"width: 100%;\" :show-header=\"false\" max-height=\"400\" @selection-change=\"selsChange\">\n                        <el-table-column type=\"selection\" width=\"55\">\n                        </el-table-column>\n                        <el-table-column prop=\"name\" label=\"名称\" min-width=\"25%\" sortable>\n                        </el-table-column>\n                        <el-table-column prop=\"requestType\" label=\"HTTP方式\" min-width=\"15%\" sortable>\n                        </el-table-column>\n                        <el-table-column prop=\"apiAddress\" label=\"地址\" min-width=\"60%\" sortable>\n                        </el-table-column>\n                    </el-table>\n                </el-col>\n            </el-row>\n            <el-col :span=\"24\" class=\"toolbar\">\n                <el-pagination layout=\"prev, pager, next\" @current-change=\"handleCurrentChangeApi\" :page-size=\"20\" :page-count=\"total\" style=\"float:right;\">\n                </el-pagination>\n            </el-col>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click.native=\"searchApiListVisible = false\">取消</el-button>\n                <el-button type=\"primary\" @click.native=\"addOldApiSubmit\" :loading=\"searchApi\">提交</el-button>\n            </div>\n        </el-dialog>\n        <el-table :data=\"ApiList\" highlight-current-row v-loading=\"listLoading\" style=\"width: 100%;\">\n            <el-table-column type=\"index\" width=\"55\">\n            </el-table-column>\n            <el-table-column prop=\"name\" label=\"接口名称\" min-width=\"20%\" sortable show-overflow-tooltip>\n                <template slot-scope=\"scope\">\n                    <el-icon name=\"name\"></el-icon>\n                    <router-link :to=\"{ name: '修改接口', params: {api_id: scope.row.id}}\" style='text-decoration: none;color: #000000;'>{{ scope.row.name }}\n                    </router-link>\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"address\" label=\"接口地址\" min-width=\"50%\" sortable show-overflow-tooltip>\n                <template slot-scope=\"scope\">\n                    <span class=\"HttpStatus\">{{scope.row.requestType}}</span><span style=\"font-size: 16px\">{{scope.row.apiAddress}}</span>\n                </template>\n            </el-table-column>\n            <el-table-column prop=\"result\" label=\"测试结果\" min-width=\"10%\" sortable show-overflow-tooltip>\n                <template slot-scope=\"scope\">\n                    <span v-show=\"!scope.row.result&&!scope.row.testStatus\">尚无测试结果</span>\n                    <span v-show=\"scope.row.testStatus\">测试中...</span>\n                    <span v-show=\"scope.row.result==='success'&&!scope.row.testStatus\" style=\"color: #11b95c;cursor:pointer;\" @click=\"resultShow(scope.row)\">成功,查看详情</span>\n                    <span v-show=\"scope.row.result==='fail'&&!scope.row.testStatus\" style=\"color: #cc0000;cursor:pointer;\" @click=\"resultShow(scope.row)\">失败,查看详情</span>\n                    <span v-show=\"scope.row.result==='timeout'&&!scope.row.testStatus\" style=\"color: #cc0000;cursor:pointer;\" @click=\"resultShow(scope.row)\">请求超时</span>\n                </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" min-width=\"20%\">\n                <template slot-scope=\"scope\">\n                    <el-button type=\"primary\" size=\"small\" @click=\"Test(scope.$index, scope.row)\">测试</el-button>\n                    <router-link :to=\"{ name: '修改接口', params: {api_id: scope.row.id}}\" style='text-decoration: none;color: #000000;'>\n                        <el-button size=\"small\">修改</el-button>\n                    </router-link>\n                    <el-button type=\"danger\" size=\"small\" @click=\"handleDel(scope.$index, scope.row)\">删除</el-button>\n                </template>\n            </el-table-column>\n        </el-table>\n        <el-col :span=\"24\" class=\"toolbar\">\n            <el-pagination layout=\"prev, pager, next\" @current-change=\"handleCurrentChange\" :page-size=\"20\" :page-count=\"total\" style=\"float:right;\">\n            </el-pagination>\n        </el-col>\n        <el-dialog title=\"测试结果\" :visible.sync=\"TestResult\" :close-on-click-modal=\"false\">\n            <div style=\"height:700px;overflow:auto;overflow-x:hidden;border: 1px solid #e6e6e6\">\n                <div style=\"font-size: 25px;\" class=\"resultStyle\">{{result.name}}</div>\n                <div class=\"lin\"></div>\n                <div class=\"resultStyle\">请求地址:&nbsp&nbsp{{result.url}}</div>\n                <div class=\"resultStyle\">请求方式:&nbsp&nbsp{{result.requestType}}</div>\n                <div class=\"resultStyle\">状态码:&nbsp&nbsp{{result.statusCode}}</div>\n                <div class=\"resultStyle\" style=\"padding-bottom: 10px\">请求时间:&nbsp&nbsp{{result.testTime}}</div>\n                <div class=\"lin\"></div>\n                <div style=\"font-size: 25px;\" class=\"resultStyle\">请求头部</div>\n                <div v-for=\"(item,value) in result.header\" class=\"resultStyle\">{{value}}:&nbsp&nbsp{{item}}</div>\n                <div class=\"lin\" style=\"margin-top: 10px\"></div>\n                <div style=\"font-size: 25px;\" class=\"resultStyle\">请求参数</div>\n                <div class=\"resultStyle\" style=\"padding-bottom: 10px\">{{result.parameter}}</div>\n                <div class=\"lin\"></div>\n                <div style=\"font-size: 25px;\" class=\"resultStyle\">返回结果</div>\n                <div class=\"resultStyle\">HTTP状态码:&nbsp&nbsp{{result.statusCode}}</div>\n                <div class=\"resultStyle\">匹配规则:&nbsp&nbsp{{result.examineType}}</div>\n                <div class=\"resultStyle\">规则内容</div>\n                <div v-show=\"result.data\" class=\"resultStyle\" style=\"overflow:auto;overflow-x:hidden;border: 1px solid #e6e6e6;padding: 10px;width: 90%;word-break: break-all;line-height:25px\"><pre v-highlightA><code>{{result.data}}</code></pre></div>\n                <div v-show=\"!result.data\" class=\"resultStyle\" style=\"overflow:auto;overflow-x:hidden;border: 1px solid #e6e6e6;padding: 10px;width: 90%;word-break: break-all;line-height:25px;text-align: center\">无校验规则</div>\n                <div style=\"font-size: 25px;\" class=\"resultStyle\">实际结果</div>\n                <div class=\"resultStyle\">HTTP状态码:&nbsp&nbsp{{result.httpStatus}}</div>\n                <div class=\"resultStyle\">实际返回内容</div>\n                <div v-show=\"result.responseData\" class=\"resultStyle\" style=\"overflow:auto;overflow-x:hidden;border: 1px solid #e6e6e6;padding: 10px;width: 90%;word-break: break-all;line-height:25px\"><pre v-highlightA><code>{{result.responseData}}</code></pre></div>\n                <div v-show=\"!result.responseData\" class=\"resultStyle\" style=\"overflow:auto;overflow-x:hidden;border: 1px solid #e6e6e6;padding: 10px;width: 90%;word-break: break-all;line-height:25px;text-align: center\">无返回内容</div>\n            </div>\n        </el-dialog>\n    </section>\n</template>\n\n<script>\n    import { test } from '../../../api/api'\n    import $ from 'jquery'\n    import moment from \"moment\"\n    export default {\n        data() {\n            return{\n                project: \"\",\n                case: \"\",\n                ApiList: [],\n                listLoading: false,\n                searchName: \"\",\n                total: 0,\n                url: '',\n                Host: [],\n                searchApiListVisible: false,\n                searchApi: false,\n                searchApiList: [],\n                groupData: [],\n                apiListLoading: false,\n                apiTotal: 0,\n                pageApi: 1,\n                sels: [],//列表选中列\n                TestResult: false,\n                result: {},\n                ApiListLen: \"\",\n                ApiListIndex: 0,\n                activeIndex: \"\",\n            }\n        },\n        methods: {\n            handleSelect(key, keyPath) {\n                this.activeIndex = key;\n                console.log(this.activeIndex)\n            },\n            getCaseApiList() {\n                this.listLoading = true;\n                let self = this;\n                $.ajax({\n                    type: \"get\",\n                    url: test+\"/api/automation/api_list\",\n                    async: true,\n                    data: { project_id: this.$route.params.project_id,\n                        page: self.page,\n                        name: self.searchName,\n                        case_id: this.$route.params.case_id\n                    },\n                    headers: {\n                        Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                    },\n                    timeout: 5000,\n                    success: function(data) {\n                        self.listLoading = false;\n                        if (data.code === '999999') {\n                            self.ApiList = [];\n                            self.total = data.data.total;\n                            data.data.data.forEach((item) =>{\n                                item.result = false;\n                                self.ApiList.push(item)\n                            });\n                            // self.ApiList = data.data.data\n                        }\n                        else {\n                            self.$message.error({\n                                message: data.msg,\n                                center: true,\n                            })\n                        }\n                    },\n                })\n            },\n            Test(index, row) {\n                if (this.url) {\n                    row.testStatus = true;\n                    let self = this;\n                    $.ajax({\n                        type: \"post\",\n                        url: test+\"/api/automation/start_test\",\n                        async: true,\n                        data: JSON.stringify({\n                            project_id: Number(this.$route.params.project_id),\n                            case_id: Number(this.$route.params.case_id),\n                            host_id: Number(this.url),\n                            id: Number(row.id)\n                        }),\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                        },\n                        success: function(data) {\n                            if (data.code === '999999') {\n                                row.result = data.data.result\n                            }\n                            else {\n                                self.$message.error({\n                                    message: data.msg,\n                                    center: true,\n                                })\n                            }\n                            row.testStatus = false;\n                        },\n                        error: function () {\n                            row.testStatus = false;\n                        },\n                    })\n                } else {\n                    this.$message({\n                        message: '请选择测试环境',\n                        center: true,\n                        type: 'warning'\n                    })\n                }\n            },\n            ApiTotal() {\n                this.ApiListLen = this.ApiList.length\n            },\n            TestAllApi(){\n                for(let i=0;i<this.ApiList.length;i++){\n                    this.ApiList[i].result = \"\";\n                }\n                this.TestAll()\n            },\n            TestAll() {\n                if (this.url) {\n                    let self = this;\n                    this.ApiList[this.ApiListIndex].testStatus = true;\n                    $.ajax({\n                        type: \"post\",\n                        url: test+\"/api/automation/start_test\",\n                        async: true,\n                        data: JSON.stringify({\n                            project_id: Number(this.$route.params.project_id),\n                            case_id: Number(this.$route.params.case_id),\n                            host_id: Number(this.url),\n                            id: Number(this.ApiList[this.ApiListIndex].id)\n                        }),\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                        },\n                        success: function(data) {\n                            if (data.code === '999999') {\n                                self.ApiList[self.ApiListIndex].testStatus = false;\n                                self.ApiList[self.ApiListIndex].result = data.data.result;\n                                self.ApiListIndex = self.ApiListIndex + 1;\n                                if (self.ApiListIndex !== self.ApiList.length) {\n                                    self.TestAll()\n                                } else {\n                                    self.ApiListIndex = 0\n                                }\n                            }\n                            else {\n                                self.ApiList[self.ApiListIndex].testStatus = false;\n                                self.ApiListIndex = 0;\n                                self.$message.error({\n                                    message: data.msg,\n                                    center: true,\n                                })\n                            }\n                        },\n                    })\n                } else {\n                    this.$message({\n                        message: '请选择测试环境',\n                        center: true,\n                        type: 'warning'\n                    })\n                }\n            },\n            handleDel(index, row){\n                this.$confirm('确认删除该记录吗?', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    this.listLoading = true;\n                    //NProgress.start();\n                    let self = this;\n                    $.ajax({\n                        type: \"post\",\n                        url: test+\"/api/automation/del_api\",\n                        async: true,\n                        data: JSON.stringify({\n                            project_id: Number(this.$route.params.project_id),\n                            case_id: Number(this.$route.params.case_id),\n                            ids: [row.id] }),\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                        },\n                        timeout: 5000,\n                        success: function(data) {\n                            if (data.code === '999999') {\n                                self.$message({\n                                    message: '删除成功',\n                                    center: true,\n                                    type: 'success'\n                                })\n                            } else {\n                                self.$message.error({\n                                    message: data.msg,\n                                    center: true,\n                                })\n                            }\n                            self.getCaseApiList();\n                        },\n                    })\n\n                }).catch(() => {\n                });\n            },\n            // 获取api分组\n            getApiGroup() {\n                let self = this;\n                $.ajax({\n                    type: \"get\",\n                    url: test+\"/api/api/group\",\n                    async: true,\n                    data: { project_id: this.$route.params.project_id},\n                    headers: {\n                        Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                    },\n                    timeout: 5000,\n                    success: function(data) {\n                        if (data.code === '999999') {\n                            self.groupData = data.data;\n                        }\n                        else {\n                            self.$message.error({\n                                message: data.msg,\n                                center: true,\n                            })\n                        }\n                    },\n                })\n            },\n            getApiList(_list) {\n                this.apiListLoading = true;\n                let self = this;\n                let param = { project_id: Number(this.$route.params.project_id), page: self.page};\n                if (_list) {\n                    param['apiGroupLevelFirst_id'] = Number(_list);\n                }\n                $.ajax({\n                    type: \"get\",\n                    url: test+\"/api/api/api_list\",\n                    async: true,\n                    data: param,\n                    headers: {\n                        Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                    },\n                    timeout: 5000,\n                    success: function(data) {\n                        self.apiListLoading = false;\n                        if (data.code === '999999') {\n                            self.searchApiList = data.data.data;\n                            self.total = data.data.total;\n                        }\n                        else {\n                            self.$message.error({\n                                message: data.msg,\n                                center: true,\n                            })\n                        }\n                    },\n                })\n            },\n            resultShow(row) {\n                this.result[\"name\"] = row.name;\n                this.getResult(row.id);\n            },\n            getResult(_id){\n                let self = this;\n                $.ajax({\n                    type: \"get\",\n                    url: test+\"/api/automation/look_result\",\n                    async: true,\n                    data: {\n                        project_id: this.$route.params.project_id,\n                        case_id: this.$route.params.case_id,\n                        api_id: _id\n                    },\n                    headers: {\n                        Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                    },\n                    timeout: 5000,\n                    success: (data) => {\n                        if (data.code === '999999') {\n                            self.result[\"url\"] = data.data.url;\n                            self.result[\"requestType\"] = data.data.requestType;\n                            self.result[\"header\"] = eval(\"(\"+data.data.header+\")\");\n                            self.result[\"parameter\"] = data.data.parameter;\n                            self.result[\"statusCode\"] = data.data.statusCode;\n                            self.result[\"examineType\"] = data.data.examineType;\n                            self.result[\"data\"] = data.data.data;\n                            self.result[\"result\"] = data.data.result;\n                            self.result[\"httpStatus\"] = data.data.httpStatus;\n                            self.result[\"responseData\"] = JSON.parse(data.data.responseData.replace(/'/g, \"\\\"\").replace(/None/g, \"null\").replace(/True/g, \"true\").replace(/False/g, \"false\"));\n                            self.result[\"testTime\"] = data.data.testTime;\n                            self.TestResult = true;\n                        }\n                        else {\n                            self.$message.error({\n                                message: data.msg,\n                                center: true,\n                            })\n                        }\n                    },\n                    error: function () {\n                        self.$message.error({\n                            message: \"失败\",\n                            center: true,\n                        })\n                    }\n                })\n            },\n            // 添加已有接口弹出\n            addOldApi() {\n                this.searchApiListVisible = true;\n                this.getApiGroup();\n                this.getApiList()\n            },\n            addOldApiSubmit() {\n                let ids = this.sels.map(item => item.id);\n                let self = this;\n                this.$confirm('确认添加选中记录吗？', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    //NProgress.start();\n                    let param = JSON.stringify({\n                            project_id: Number(this.$route.params.project_id),\n                            case_id: Number(this.$route.params.case_id),\n                            api_ids: ids,\n                        });\n                    $.ajax({\n                        type: \"post\",\n                        url: test+\"/api/automation/add_old_api\",\n                        async: true,\n                        data:param,\n                        headers: {\n                            Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                        },\n                        timeout: 5000,\n                        success: function(data) {\n                            self.searchApiListVisible = false;\n                            if (data.code === '999999') {\n                                self.$message({\n                                    message: '添加成功',\n                                    center: true,\n                                    type: 'success'\n                                })\n                            }\n                            else {\n                                self.$message.error({\n                                    message: data.msg,\n                                    center: true,\n                                })\n                            }\n                            self.getCaseApiList()\n                        },\n                    })\n                }).catch(() => {\n\n                });\n            },\n            handleCurrentChange(val) {\n                this.page = val;\n                this.getCaseApiList()\n            },\n            handleCurrentChangeApi(val) {\n                console.log(this.groupData[this.activeIndex][\"id\"]);\n                this.page = val;\n                this.getApiList(this.groupData[this.activeIndex][\"id\"])\n            },\n            selsChange(sels){\n                this.sels = sels;\n            },\n            getHost() {\n                let self = this;\n                $.ajax({\n                    type: \"get\",\n                    url: test+\"/api/global/host_total\",\n                    async: true,\n                    data: { project_id: this.$route.params.project_id},\n                    headers: {\n                        Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                    },\n                    timeout: 5000,\n                    success: (data) => {\n                        if (data.code === '999999') {\n                            data.data.data.forEach((item) => {\n                                if (item.status) {\n                                    self.Host.push(item)\n                                }\n                            })\n                        }\n                        else {\n                            self.$message.error({\n                                message: data.msg,\n                                center: true,\n                            })\n                        }\n                    },\n                })\n            },\n        },\n        mounted() {\n            this.getCaseApiList();\n            this.getHost();\n            this.project = this.$route.params.project_id;\n            this.case = this.$route.params.case_id;\n        }\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n    .return-list {\n        margin-top: 0px;\n        margin-bottom: 10px;\n        border-radius: 25px;\n    }\n    .HttpStatus {\n        border-radius: 25px;\n        padding: 10px;\n        box-sizing: border-box;\n        color: #fff;\n        font-size: 15px;\n        background-color: #409eff;\n        text-align: center;\n        margin-right: 10px;\n    }\n    .resultStyle{\n        margin-left: 2%;\n        margin-top: 10px;\n    }\n    .lin{\n        left: 2%;\n        border: 1px solid #e6e6e6;\n        width: 90%;\n        position: relative\n    }\n</style>\n\n\n// WEBPACK FOOTER //\n// src/views/project/automation/CaseApiList.vue"],"sourceRoot":""}