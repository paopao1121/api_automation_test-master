{"version":3,"sources":["webpack:///src/views/project/api/API.vue","webpack:///./src/views/project/api/API.vue?6956","webpack:///./src/views/project/api/API.vue"],"names":["API","data","project","groupData","addGroupFormVisible","addGroupLoading","addFormVisible","addGroupFormRules","firstgroup","required","message","trigger","addGroupForm","editFirstGroupFormVisible","editFirstGroupLoading","editFirstFormVisible","editFirstGroupFormRules","secondFirstGroup","editFirstGroupForm","second_id","filters","name","api","total","page","listLoading","sels","apiView","methods","init","this","getApiGroup","self","params","project_id","$route","headers","Content-Type","Authorization","JSON","parse","sessionStorage","getItem","Object","then","_data","msg","code","$message","error","center","handleAddGroup","handleEditFirstGroup","first_id","addGroupSubmit","_this","$refs","validate","valid","$confirm","Number","type","resetFields","editFirstGroupSubmit","_this2","id","handleDelFirst","_this3","mounted","api_API","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","span","on","click","_v","staticStyle","text-decoration","color","to","cursor","default-active","active-text-color","unique-opened","_l","item","index","firstGroup","key","slot","_s","margin-right","nativeOn","$event","width","left","title","visible","close-on-click-modal","update:visible","ref","model","label-width","rules","label","prop","auto-complete","value","callback","$$v","$set","trim","expression","loading","margin-left","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/27.a9bb4bbefdf8a3ae871d.js","sourcesContent":["<template>\n    <section>\n        <el-row :span=\"24\" class=\"row-title\">\n            <el-col :span=\"4\">\n                <el-button class=\"addGroup\" @click=\"handleAddGroup\">新增分组</el-button>\n                <router-link :to=\"{ name: '快速测试', params: {project_id: this.$route.params.project_id}}\" style='text-decoration: none;color: aliceblue;'>\n                    <el-button class=\"addGroup\">快速测试</el-button>\n                </router-link>\n                <div class=\"api-title\"><strong>接口分组</strong></div>\n                <div class=\"api-title\" style=\"cursor:pointer;\">\n                    <router-link :to=\"{ name: '接口列表', params: {project_id: this.$route.params.project_id}}\" style='text-decoration: none;color: aliceblue;'>\n                        所有接口\n                    </router-link>\n                </div>\n                <aside>\n                    <!--导航菜单-->\n                    <el-menu default-active=\"2\" class=\"el-menu-vertical-demo\" active-text-color=\"rgb(32, 160, 255)\" :unique-opened=\"true\">\n                        <template v-for=\"(item,index) in groupData\">\n                            <router-link :to=\"{ name: '分组接口列表', params: {project_id: project, firstGroup: item.id}}\" style=\"text-decoration:none;\">\n                                <el-menu-item :index=\"index+''\" :key=\"item.id\" class=\"group\">\n                                    <template slot=\"title\">{{item.name}}\n                                        <el-dropdown trigger=\"hover\" class=\"editGroup\" style=\"margin-right:10%\">\n                                            <i class=\"el-icon-more\"></i>\n                                            <el-dropdown-menu slot=\"dropdown\">\n                                                <el-dropdown-item @click.native=\"handleDelFirst(item.id)\">删除</el-dropdown-item>\n                                                <el-dropdown-item @click.native=\"handleEditFirstGroup(item.id, item.name)\">修改</el-dropdown-item>\n                                            </el-dropdown-menu>\n                                        </el-dropdown>\n                                    </template>\n                                </el-menu-item>\n                            </router-link>\n                        </template>\n                    </el-menu>\n                </aside>\n            </el-col>\n            <!--新增-->\n            <el-dialog title=\"新增分组\" :visible.sync=\"addGroupFormVisible\" :close-on-click-modal=\"false\" style=\"width: 60%; left: 20%\">\n                <el-form :model=\"addGroupForm\" label-width=\"80px\"  :rules=\"addGroupFormRules\" ref=\"addGroupForm\">\n                    <el-form-item label=\"分组名称\" prop='firstgroup'>\n                        <el-input v-model.trim=\"addGroupForm.firstgroup\" auto-complete=\"off\" style=\"width: 90%\"></el-input>\n                    </el-form-item>\n                </el-form>\n                <div slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click.native=\"addGroupFormVisible = false\">取消</el-button>\n                    <el-button type=\"primary\" @click.native=\"addGroupSubmit\" :loading=\"addGroupLoading\">提交</el-button>\n                </div>\n            </el-dialog>\n            <!--编辑父分组-->\n            <el-dialog title=\"编辑分组\" :visible.sync=\"editFirstGroupFormVisible\" :close-on-click-modal=\"false\" style=\"width: 60%; left: 20%\">\n                <el-form :model=\"editFirstGroupForm\" label-width=\"80px\"  :rules=\"editFirstGroupFormRules\" ref=\"editFirstGroupForm\">\n                    <el-form-item label=\"分组名称\" prop='secondFirstGroup'>\n                        <el-input v-model.trim=\"editFirstGroupForm.secondFirstGroup\" auto-complete=\"off\"></el-input>\n                    </el-form-item>\n                </el-form>\n                <div slot=\"footer\" class=\"dialog-footer\">\n                    <el-button @click.native=\"editFirstGroupFormVisible = false\">取消</el-button>\n                    <el-button type=\"primary\" @click.native=\"editFirstGroupSubmit\" :loading=\"editFirstGroupLoading\">提交</el-button>\n                </div>\n            </el-dialog>\n            <el-col :span=\"20\">\n                <div style=\"margin-left: 10px;margin-right: 20px\">\n                    <router-view></router-view>\n                </div>\n            </el-col>\n        </el-row>\n    </section>\n</template>\n\n<script>\n    import {addApiGroup, delApiGroup, getApiGroupList, updateApiGroup} from '../../../api/api'\n    export default {\n        data() {\n            return {\n                project: \"\",\n                groupData: [],\n                addGroupFormVisible: false,\n                addGroupLoading: false,\n                addFormVisible: false,//新增界面是否显示\n                addGroupFormRules: {\n                    firstgroup: [\n                        { required: true, message: '请输入子分组名称', trigger: 'blur' },\n                        // { min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur' }\n                    ]\n                },\n                //新增界面数据\n                addGroupForm: {\n                    firstgroup: '',\n                },\n                editFirstGroupFormVisible: false,\n                editFirstGroupLoading: false,\n                editFirstFormVisible: false,//编辑界面是否显示\n                editFirstGroupFormRules: {\n                    secondFirstGroup: [\n                        { required: true, message: '请输入分组名称', trigger: 'blur' },\n                        // { min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur' }\n                    ]\n                },\n                //编辑界面数据\n                editFirstGroupForm: {\n                    firstgroup: '',\n                    second_id: '',\n                },\n                filters: {\n                    name: ''\n                },\n                api: [],\n                total: 0,\n                page: 1,\n                listLoading: false,\n                sels: [],//列表选中列\n                apiView: true,\n            }\n        },\n        methods: {\n            // 初始化\n            init() {\n                this.addGroupForm.firstgroup = ''\n            },\n            // 获取api分组\n            getApiGroup() {\n                let self = this;\n                let params = {\n                    project_id: this.$route.params.project_id\n                };\n                let headers = {\n                    \"Content-Type\": \"application/json\",\n                    Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                };\n                getApiGroupList(headers, params).then(_data => {\n                    let {msg, code, data} = _data;\n                    if (code === '999999') {\n                        self.groupData = data;\n                        self.init();\n                    }\n                    else {\n                        self.$message.error({\n                            message: msg,\n                            center: true,\n                        })\n                    }\n                })\n            },\n            // 添加分组弹窗显示\n            handleAddGroup() {\n                this.addGroupFormVisible = true;\n            },\n            // 修改分组弹窗显示\n            handleEditFirstGroup(first_id, name) {\n                this.editFirstGroupFormVisible = true;\n                this.editFirstGroupForm.second_id = first_id;\n                this.editFirstGroupForm.secondFirstGroup = name\n            },\n            // 添加分组\n            addGroupSubmit() {\n                this.$refs.addGroupForm.validate((valid) => {\n                    if (valid) {\n                        let self = this;\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.addGroupLoading = true;\n                            //NProgress.start();\n                            let params = {\n                                project_id: Number(this.$route.params.project_id),\n                                name: self.addGroupForm.firstgroup\n                            };\n                            let headers = {\n                                \"Content-Type\": \"application/json\",\n                                Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                            };\n                            addApiGroup(headers, params).then(_data => {\n                                let {msg, code, data} = _data;\n                                self.addGroupLoading = false;\n                                    if (code === '999999') {\n                                        self.$message({\n                                            message: '添加成功',\n                                            center: true,\n                                            type: 'success'\n                                        });\n                                        self.$refs['addGroupForm'].resetFields();\n                                        self.addGroupFormVisible = false;\n                                        self.getApiGroup();\n                                        self.init()\n                                    } else if (code === '999997'){\n                                        self.$message.error({\n                                            message: msg,\n                                            center: true,\n                                        })\n                                    } else {\n                                        self.$message.error({\n                                            message: msg,\n                                            center: true,\n                                        });\n                                        self.$refs['addGroupForm'].resetFields();\n                                        self.addGroupFormVisible = false;\n                                        self.getApiGroup();\n                                        self.init()\n                                    }\n                            })\n                        });\n                    }\n                });\n            },\n            // 修改分组\n            editFirstGroupSubmit(){\n                this.$refs.editFirstGroupForm.validate((valid) => {\n                    if (valid) {\n                        let self = this;\n                        this.$confirm('确认提交吗？', '提示', {}).then(() => {\n                            self.editFirstGroupLoading = true;\n                            let params = {\n                                project_id: Number(this.$route.params.project_id),\n                                name: self.editFirstGroupForm.secondFirstGroup,\n                                id: self.editFirstGroupForm.second_id\n                            };\n                            let headers = {\n                                \"Content-Type\": \"application/json\",\n                                Authorization: 'Token '+JSON.parse(sessionStorage.getItem('token'))\n                            };\n                            updateApiGroup(headers, params).then(_data => {\n                                let {msg, code, data} = _data;\n                                self.editFirstGroupLoading = false;\n                                if (code === '999999') {\n                                    self.$message({\n                                        message: '修改成功',\n                                        center: true,\n                                        type: 'success'\n                                    });\n                                    self.$refs['editFirstGroupForm'].resetFields();\n                                    self.editFirstGroupFormVisible = false;\n                                    self.getApiGroup();\n                                    self.init()\n                                } else if (code === '999997'){\n                                    self.$message.error({\n                                        message: msg,\n                                        center: true,\n                                    })\n                                } else {\n                                    self.$message.error({\n                                        message: msg,\n                                        center: true,\n                                    });\n                                    self.$refs['editFirstGroupForm'].resetFields();\n                                    self.editFirstGroupFormVisible = false;\n                                    self.getApiGroup();\n                                    self.init()\n                                }\n                            })\n                        });\n                    }\n                });\n            },\n            //删除分组\n            handleDelFirst: function (id) {\n                this.$confirm('确认删除该记录吗?', '提示', {\n                    type: 'warning'\n                }).then(() => {\n                    //NProgress.start();\n                    let self = this;\n                    let params = {\n                        id: Number(id),\n                        project_id: Number(this.$route.params.project_id)\n                    };\n                    let headers = {\n                        \"Content-Type\": \"application/json\",\n                        Authorization: 'Token ' + JSON.parse(sessionStorage.getItem('token'))\n                    };\n                    delApiGroup(headers, params).then(_data => {\n                        let {msg, code, data} = _data;\n                        if (code === '999999') {\n                            self.$message({\n                                message: '删除成功',\n                                center: true,\n                                type: 'success'\n                            })\n                        } else {\n                            self.$message.error({\n                                message: msg,\n                                center: true,\n                            })\n                        }\n                        self.getApiGroup()\n                    })\n                })\n            }\n        },\n        mounted() {\n            this.getApiGroup();\n            this.project = this.$route.params.project_id\n\n        }\n    }\n\n</script>\n\n<style lang=\"scss\" scoped>\n    .api-title {\n        padding: 15px;\n        margin: 0px;\n        text-align: center;\n        border-radius:5px;\n        font-size: 15px;\n        color: aliceblue;\n        background-color: rgb(32, 160, 255);\n        font-family: PingFang SC;\n    }\n    .group .editGroup {\n        float:right;\n    }\n    .row-title {\n        margin: 35px;\n    }\n    .addGroup {\n        margin-top: 0px;\n        margin-bottom: 10px;\n        border-radius: 25px;\n    }\n</style>\n\n\n// WEBPACK FOOTER //\n// src/views/project/api/API.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('el-row',{staticClass:\"row-title\",attrs:{\"span\":24}},[_c('el-col',{attrs:{\"span\":4}},[_c('el-button',{staticClass:\"addGroup\",on:{\"click\":_vm.handleAddGroup}},[_vm._v(\"新增分组\")]),_vm._v(\" \"),_c('router-link',{staticStyle:{\"text-decoration\":\"none\",\"color\":\"aliceblue\"},attrs:{\"to\":{ name: '快速测试', params: {project_id: this.$route.params.project_id}}}},[_c('el-button',{staticClass:\"addGroup\"},[_vm._v(\"快速测试\")])],1),_vm._v(\" \"),_c('div',{staticClass:\"api-title\"},[_c('strong',[_vm._v(\"接口分组\")])]),_vm._v(\" \"),_c('div',{staticClass:\"api-title\",staticStyle:{\"cursor\":\"pointer\"}},[_c('router-link',{staticStyle:{\"text-decoration\":\"none\",\"color\":\"aliceblue\"},attrs:{\"to\":{ name: '接口列表', params: {project_id: this.$route.params.project_id}}}},[_vm._v(\"\\n                    所有接口\\n                \")])],1),_vm._v(\" \"),_c('aside',[_c('el-menu',{staticClass:\"el-menu-vertical-demo\",attrs:{\"default-active\":\"2\",\"active-text-color\":\"rgb(32, 160, 255)\",\"unique-opened\":true}},[_vm._l((_vm.groupData),function(item,index){return [_c('router-link',{staticStyle:{\"text-decoration\":\"none\"},attrs:{\"to\":{ name: '分组接口列表', params: {project_id: _vm.project, firstGroup: item.id}}}},[_c('el-menu-item',{key:item.id,staticClass:\"group\",attrs:{\"index\":index+''}},[_c('template',{slot:\"title\"},[_vm._v(_vm._s(item.name)+\"\\n                                    \"),_c('el-dropdown',{staticClass:\"editGroup\",staticStyle:{\"margin-right\":\"10%\"},attrs:{\"trigger\":\"hover\"}},[_c('i',{staticClass:\"el-icon-more\"}),_vm._v(\" \"),_c('el-dropdown-menu',{attrs:{\"slot\":\"dropdown\"},slot:\"dropdown\"},[_c('el-dropdown-item',{nativeOn:{\"click\":function($event){return _vm.handleDelFirst(item.id)}}},[_vm._v(\"删除\")]),_vm._v(\" \"),_c('el-dropdown-item',{nativeOn:{\"click\":function($event){return _vm.handleEditFirstGroup(item.id, item.name)}}},[_vm._v(\"修改\")])],1)],1)],1)],2)],1)]})],2)],1)],1),_vm._v(\" \"),_c('el-dialog',{staticStyle:{\"width\":\"60%\",\"left\":\"20%\"},attrs:{\"title\":\"新增分组\",\"visible\":_vm.addGroupFormVisible,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.addGroupFormVisible=$event}}},[_c('el-form',{ref:\"addGroupForm\",attrs:{\"model\":_vm.addGroupForm,\"label-width\":\"80px\",\"rules\":_vm.addGroupFormRules}},[_c('el-form-item',{attrs:{\"label\":\"分组名称\",\"prop\":\"firstgroup\"}},[_c('el-input',{staticStyle:{\"width\":\"90%\"},attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.addGroupForm.firstgroup),callback:function ($$v) {_vm.$set(_vm.addGroupForm, \"firstgroup\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"addGroupForm.firstgroup\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){_vm.addGroupFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.addGroupLoading},nativeOn:{\"click\":function($event){return _vm.addGroupSubmit($event)}}},[_vm._v(\"提交\")])],1)],1),_vm._v(\" \"),_c('el-dialog',{staticStyle:{\"width\":\"60%\",\"left\":\"20%\"},attrs:{\"title\":\"编辑分组\",\"visible\":_vm.editFirstGroupFormVisible,\"close-on-click-modal\":false},on:{\"update:visible\":function($event){_vm.editFirstGroupFormVisible=$event}}},[_c('el-form',{ref:\"editFirstGroupForm\",attrs:{\"model\":_vm.editFirstGroupForm,\"label-width\":\"80px\",\"rules\":_vm.editFirstGroupFormRules}},[_c('el-form-item',{attrs:{\"label\":\"分组名称\",\"prop\":\"secondFirstGroup\"}},[_c('el-input',{attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.editFirstGroupForm.secondFirstGroup),callback:function ($$v) {_vm.$set(_vm.editFirstGroupForm, \"secondFirstGroup\", (typeof $$v === 'string'? $$v.trim(): $$v))},expression:\"editFirstGroupForm.secondFirstGroup\"}})],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{nativeOn:{\"click\":function($event){_vm.editFirstGroupFormVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"loading\":_vm.editFirstGroupLoading},nativeOn:{\"click\":function($event){return _vm.editFirstGroupSubmit($event)}}},[_vm._v(\"提交\")])],1)],1),_vm._v(\" \"),_c('el-col',{attrs:{\"span\":20}},[_c('div',{staticStyle:{\"margin-left\":\"10px\",\"margin-right\":\"20px\"}},[_c('router-view')],1)])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0853e244\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/project/api/API.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0853e244\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./API.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./API.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./API.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0853e244\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./API.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-0853e244\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/project/api/API.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}